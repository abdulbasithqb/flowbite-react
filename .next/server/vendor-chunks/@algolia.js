"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@algolia";
exports.ids = ["vendor-chunks/@algolia"];
exports.modules = {

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/checkOptions.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/checkOptions.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkOptions: () => (/* binding */ checkOptions)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/warn.js\");\n\nfunction checkOptions(options) {\n     true ? (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.warn)(!options.debug, \"The `debug` option is meant for development debugging and should not be used in production.\") : 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vY2hlY2tPcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBQzdDLFNBQVNDLGFBQWFDLE9BQU87SUFEcEMsS0FFMkIsR0FBZUYsa0VBQUlBLENBQUMsQ0FBQ0UsUUFBUUMsS0FBSyxFQUFFLGlHQUFpRyxDQUFNO0FBQ3RLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vY2hlY2tPcHRpb25zLmpzP2EzYzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2FybiB9IGZyb20gJ0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1zaGFyZWQnO1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrT3B0aW9ucyhvcHRpb25zKSB7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyB3YXJuKCFvcHRpb25zLmRlYnVnLCAnVGhlIGBkZWJ1Z2Agb3B0aW9uIGlzIG1lYW50IGZvciBkZXZlbG9wbWVudCBkZWJ1Z2dpbmcgYW5kIHNob3VsZCBub3QgYmUgdXNlZCBpbiBwcm9kdWN0aW9uLicpIDogdm9pZCAwO1xufSJdLCJuYW1lcyI6WyJ3YXJuIiwiY2hlY2tPcHRpb25zIiwib3B0aW9ucyIsImRlYnVnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/checkOptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/createAutocomplete.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/createAutocomplete.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAutocomplete: () => (/* binding */ createAutocomplete)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_plugin_algolia_insights__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @algolia/autocomplete-plugin-algolia-insights */ \"(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js\");\n/* harmony import */ var _checkOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checkOptions */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/checkOptions.js\");\n/* harmony import */ var _createStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createStore */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/createStore.js\");\n/* harmony import */ var _getAutocompleteSetters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getAutocompleteSetters */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getAutocompleteSetters.js\");\n/* harmony import */ var _getDefaultProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDefaultProps */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getDefaultProps.js\");\n/* harmony import */ var _getPropGetters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getPropGetters */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getPropGetters.js\");\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/metadata.js\");\n/* harmony import */ var _onInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./onInput */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onInput.js\");\n/* harmony import */ var _stateReducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stateReducer */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/stateReducer.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\n\n\n\n\n\n\n\n\nfunction createAutocomplete(options) {\n    (0,_checkOptions__WEBPACK_IMPORTED_MODULE_0__.checkOptions)(options);\n    var subscribers = [];\n    var props = (0,_getDefaultProps__WEBPACK_IMPORTED_MODULE_1__.getDefaultProps)(options, subscribers);\n    var store = (0,_createStore__WEBPACK_IMPORTED_MODULE_2__.createStore)(_stateReducer__WEBPACK_IMPORTED_MODULE_3__.stateReducer, props, onStoreStateChange);\n    var setters = (0,_getAutocompleteSetters__WEBPACK_IMPORTED_MODULE_4__.getAutocompleteSetters)({\n        store: store\n    });\n    var propGetters = (0,_getPropGetters__WEBPACK_IMPORTED_MODULE_5__.getPropGetters)(_objectSpread({\n        props: props,\n        refresh: refresh,\n        store: store,\n        navigator: props.navigator\n    }, setters));\n    function onStoreStateChange(_ref) {\n        var prevState = _ref.prevState, state = _ref.state;\n        props.onStateChange(_objectSpread({\n            prevState: prevState,\n            state: state,\n            refresh: refresh,\n            navigator: props.navigator\n        }, setters));\n    }\n    function refresh() {\n        return (0,_onInput__WEBPACK_IMPORTED_MODULE_6__.onInput)(_objectSpread({\n            event: new Event(\"input\"),\n            nextState: {\n                isOpen: store.getState().isOpen\n            },\n            props: props,\n            navigator: props.navigator,\n            query: store.getState().query,\n            refresh: refresh,\n            store: store\n        }, setters));\n    }\n    if (options.insights && !props.plugins.some(function(plugin) {\n        return plugin.name === \"aa.algoliaInsightsPlugin\";\n    })) {\n        var insightsParams = typeof options.insights === \"boolean\" ? {} : options.insights;\n        props.plugins.push((0,_algolia_autocomplete_plugin_algolia_insights__WEBPACK_IMPORTED_MODULE_7__.createAlgoliaInsightsPlugin)(insightsParams));\n    }\n    props.plugins.forEach(function(plugin) {\n        var _plugin$subscribe;\n        return (_plugin$subscribe = plugin.subscribe) === null || _plugin$subscribe === void 0 ? void 0 : _plugin$subscribe.call(plugin, _objectSpread(_objectSpread({}, setters), {}, {\n            navigator: props.navigator,\n            refresh: refresh,\n            onSelect: function onSelect(fn) {\n                subscribers.push({\n                    onSelect: fn\n                });\n            },\n            onActive: function onActive(fn) {\n                subscribers.push({\n                    onActive: fn\n                });\n            },\n            onResolve: function onResolve(fn) {\n                subscribers.push({\n                    onResolve: fn\n                });\n            }\n        }));\n    });\n    (0,_metadata__WEBPACK_IMPORTED_MODULE_8__.injectMetadata)({\n        metadata: (0,_metadata__WEBPACK_IMPORTED_MODULE_8__.getMetadata)({\n            plugins: props.plugins,\n            options: options\n        }),\n        environment: props.environment\n    });\n    return _objectSpread(_objectSpread({\n        refresh: refresh,\n        navigator: props.navigator\n    }, propGetters), setters);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/createAutocomplete.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/createStore.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/createStore.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: () => (/* binding */ createStore)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromiseList.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction createStore(reducer, props, onStoreStateChange) {\n    var state = props.initialState;\n    return {\n        getState: function getState() {\n            return state;\n        },\n        dispatch: function dispatch(action, payload) {\n            var prevState = _objectSpread({}, state);\n            state = reducer(state, {\n                type: action,\n                props: props,\n                payload: payload\n            });\n            onStoreStateChange({\n                state: state,\n                prevState: prevState\n            });\n        },\n        pendingRequests: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.createCancelablePromiseList)()\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vY3JlYXRlU3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxTQUFTQSxRQUFRQyxHQUFHO0lBQUk7SUFBMkIsT0FBT0QsVUFBVSxjQUFjLE9BQU9FLFVBQVUsWUFBWSxPQUFPQSxPQUFPQyxRQUFRLEdBQUcsU0FBVUYsR0FBRztRQUFJLE9BQU8sT0FBT0E7SUFBSyxJQUFJLFNBQVVBLEdBQUc7UUFBSSxPQUFPQSxPQUFPLGNBQWMsT0FBT0MsVUFBVUQsSUFBSUcsV0FBVyxLQUFLRixVQUFVRCxRQUFRQyxPQUFPRyxTQUFTLEdBQUcsV0FBVyxPQUFPSjtJQUFLLEdBQUdELFFBQVFDO0FBQU07QUFDL1UsU0FBU0ssUUFBUUMsTUFBTSxFQUFFQyxjQUFjO0lBQUksSUFBSUMsT0FBT0MsT0FBT0QsSUFBSSxDQUFDRjtJQUFTLElBQUlHLE9BQU9DLHFCQUFxQixFQUFFO1FBQUUsSUFBSUMsVUFBVUYsT0FBT0MscUJBQXFCLENBQUNKO1FBQVNDLGtCQUFtQkksQ0FBQUEsVUFBVUEsUUFBUUMsTUFBTSxDQUFDLFNBQVVDLEdBQUc7WUFBSSxPQUFPSixPQUFPSyx3QkFBd0IsQ0FBQ1IsUUFBUU8sS0FBS0UsVUFBVTtRQUFFLEVBQUMsR0FBSVAsS0FBS1EsSUFBSSxDQUFDQyxLQUFLLENBQUNULE1BQU1HO0lBQVU7SUFBRSxPQUFPSDtBQUFNO0FBQ3BWLFNBQVNVLGNBQWNDLE1BQU07SUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1FBQUUsSUFBSUcsU0FBUyxRQUFRRixTQUFTLENBQUNELEVBQUUsR0FBR0MsU0FBUyxDQUFDRCxFQUFFLEdBQUcsQ0FBQztRQUFHQSxJQUFJLElBQUlmLFFBQVFJLE9BQU9jLFNBQVMsQ0FBQyxHQUFHQyxPQUFPLENBQUMsU0FBVUMsR0FBRztZQUFJQyxnQkFBZ0JQLFFBQVFNLEtBQUtGLE1BQU0sQ0FBQ0UsSUFBSTtRQUFHLEtBQUtoQixPQUFPa0IseUJBQXlCLEdBQUdsQixPQUFPbUIsZ0JBQWdCLENBQUNULFFBQVFWLE9BQU9rQix5QkFBeUIsQ0FBQ0osV0FBV2xCLFFBQVFJLE9BQU9jLFNBQVNDLE9BQU8sQ0FBQyxTQUFVQyxHQUFHO1lBQUloQixPQUFPb0IsY0FBYyxDQUFDVixRQUFRTSxLQUFLaEIsT0FBT0ssd0JBQXdCLENBQUNTLFFBQVFFO1FBQU87SUFBSTtJQUFFLE9BQU9OO0FBQVE7QUFDemYsU0FBU08sZ0JBQWdCMUIsR0FBRyxFQUFFeUIsR0FBRyxFQUFFSyxLQUFLO0lBQUlMLE1BQU1NLGVBQWVOO0lBQU0sSUFBSUEsT0FBT3pCLEtBQUs7UUFBRVMsT0FBT29CLGNBQWMsQ0FBQzdCLEtBQUt5QixLQUFLO1lBQUVLLE9BQU9BO1lBQU9mLFlBQVk7WUFBTWlCLGNBQWM7WUFBTUMsVUFBVTtRQUFLO0lBQUksT0FBTztRQUFFakMsR0FBRyxDQUFDeUIsSUFBSSxHQUFHSztJQUFPO0lBQUUsT0FBTzlCO0FBQUs7QUFDM08sU0FBUytCLGVBQWVHLEdBQUc7SUFBSSxJQUFJVCxNQUFNVSxhQUFhRCxLQUFLO0lBQVcsT0FBT25DLFFBQVEwQixTQUFTLFdBQVdBLE1BQU1XLE9BQU9YO0FBQU07QUFDNUgsU0FBU1UsYUFBYUUsS0FBSyxFQUFFQyxJQUFJO0lBQUksSUFBSXZDLFFBQVFzQyxXQUFXLFlBQVlBLFVBQVUsTUFBTSxPQUFPQTtJQUFPLElBQUlFLE9BQU9GLEtBQUssQ0FBQ3BDLE9BQU91QyxXQUFXLENBQUM7SUFBRSxJQUFJRCxTQUFTRSxXQUFXO1FBQUUsSUFBSUMsTUFBTUgsS0FBS0ksSUFBSSxDQUFDTixPQUFPQyxRQUFRO1FBQVksSUFBSXZDLFFBQVEyQyxTQUFTLFVBQVUsT0FBT0E7UUFBSyxNQUFNLElBQUlFLFVBQVU7SUFBaUQ7SUFBRSxPQUFPLENBQUNOLFNBQVMsV0FBV0YsU0FBU1MsTUFBSyxFQUFHUjtBQUFRO0FBQ3RVO0FBQy9DLFNBQVNVLFlBQVlDLE9BQU8sRUFBRUMsS0FBSyxFQUFFQyxrQkFBa0I7SUFDNUQsSUFBSUMsUUFBUUYsTUFBTUcsWUFBWTtJQUM5QixPQUFPO1FBQ0xDLFVBQVUsU0FBU0E7WUFDakIsT0FBT0Y7UUFDVDtRQUNBRyxVQUFVLFNBQVNBLFNBQVNDLE1BQU0sRUFBRUMsT0FBTztZQUN6QyxJQUFJQyxZQUFZdkMsY0FBYyxDQUFDLEdBQUdpQztZQUNsQ0EsUUFBUUgsUUFBUUcsT0FBTztnQkFDckJPLE1BQU1IO2dCQUNOTixPQUFPQTtnQkFDUE8sU0FBU0E7WUFDWDtZQUNBTixtQkFBbUI7Z0JBQ2pCQyxPQUFPQTtnQkFDUE0sV0FBV0E7WUFDYjtRQUNGO1FBQ0FFLGlCQUFpQmIsbUVBQTJCQTtJQUM5QztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vY3JlYXRlU3RvcmUuanM/MTc5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfSwgX3R5cGVvZihvYmopOyB9XG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KSksIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IHJldHVybiB0YXJnZXQ7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsga2V5ID0gX3RvUHJvcGVydHlLZXkoa2V5KTsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleShhcmcpIHsgdmFyIGtleSA9IF90b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpOyByZXR1cm4gX3R5cGVvZihrZXkpID09PSBcInN5bWJvbFwiID8ga2V5IDogU3RyaW5nKGtleSk7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZShpbnB1dCwgaGludCkgeyBpZiAoX3R5cGVvZihpbnB1dCkgIT09IFwib2JqZWN0XCIgfHwgaW5wdXQgPT09IG51bGwpIHJldHVybiBpbnB1dDsgdmFyIHByaW0gPSBpbnB1dFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAocHJpbSAhPT0gdW5kZWZpbmVkKSB7IHZhciByZXMgPSBwcmltLmNhbGwoaW5wdXQsIGhpbnQgfHwgXCJkZWZhdWx0XCIpOyBpZiAoX3R5cGVvZihyZXMpICE9PSBcIm9iamVjdFwiKSByZXR1cm4gcmVzOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChoaW50ID09PSBcInN0cmluZ1wiID8gU3RyaW5nIDogTnVtYmVyKShpbnB1dCk7IH1cbmltcG9ydCB7IGNyZWF0ZUNhbmNlbGFibGVQcm9taXNlTGlzdCB9IGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0b3JlKHJlZHVjZXIsIHByb3BzLCBvblN0b3JlU3RhdGVDaGFuZ2UpIHtcbiAgdmFyIHN0YXRlID0gcHJvcHMuaW5pdGlhbFN0YXRlO1xuICByZXR1cm4ge1xuICAgIGdldFN0YXRlOiBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9LFxuICAgIGRpc3BhdGNoOiBmdW5jdGlvbiBkaXNwYXRjaChhY3Rpb24sIHBheWxvYWQpIHtcbiAgICAgIHZhciBwcmV2U3RhdGUgPSBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSk7XG4gICAgICBzdGF0ZSA9IHJlZHVjZXIoc3RhdGUsIHtcbiAgICAgICAgdHlwZTogYWN0aW9uLFxuICAgICAgICBwcm9wczogcHJvcHMsXG4gICAgICAgIHBheWxvYWQ6IHBheWxvYWRcbiAgICAgIH0pO1xuICAgICAgb25TdG9yZVN0YXRlQ2hhbmdlKHtcbiAgICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAgICBwcmV2U3RhdGU6IHByZXZTdGF0ZVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBwZW5kaW5nUmVxdWVzdHM6IGNyZWF0ZUNhbmNlbGFibGVQcm9taXNlTGlzdCgpXG4gIH07XG59Il0sIm5hbWVzIjpbIl90eXBlb2YiLCJvYmoiLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwib3duS2V5cyIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwia2V5cyIsIk9iamVjdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJmb3JFYWNoIiwia2V5IiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiX3RvUHJvcGVydHlLZXkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImFyZyIsIl90b1ByaW1pdGl2ZSIsIlN0cmluZyIsImlucHV0IiwiaGludCIsInByaW0iLCJ0b1ByaW1pdGl2ZSIsInVuZGVmaW5lZCIsInJlcyIsImNhbGwiLCJUeXBlRXJyb3IiLCJOdW1iZXIiLCJjcmVhdGVDYW5jZWxhYmxlUHJvbWlzZUxpc3QiLCJjcmVhdGVTdG9yZSIsInJlZHVjZXIiLCJwcm9wcyIsIm9uU3RvcmVTdGF0ZUNoYW5nZSIsInN0YXRlIiwiaW5pdGlhbFN0YXRlIiwiZ2V0U3RhdGUiLCJkaXNwYXRjaCIsImFjdGlvbiIsInBheWxvYWQiLCJwcmV2U3RhdGUiLCJ0eXBlIiwicGVuZGluZ1JlcXVlc3RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/createStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getAutocompleteSetters.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/getAutocompleteSetters.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAutocompleteSetters: () => (/* binding */ getAutocompleteSetters)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/flatten.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction getAutocompleteSetters(_ref) {\n    var store = _ref.store;\n    var setActiveItemId = function setActiveItemId(value) {\n        store.dispatch(\"setActiveItemId\", value);\n    };\n    var setQuery = function setQuery(value) {\n        store.dispatch(\"setQuery\", value);\n    };\n    var setCollections = function setCollections(rawValue) {\n        var baseItemId = 0;\n        var value = rawValue.map(function(collection) {\n            return _objectSpread(_objectSpread({}, collection), {}, {\n                // We flatten the stored items to support calling `getAlgoliaResults`\n                // from the source itself.\n                items: (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.flatten)(collection.items).map(function(item) {\n                    return _objectSpread(_objectSpread({}, item), {}, {\n                        __autocomplete_id: baseItemId++\n                    });\n                })\n            });\n        });\n        store.dispatch(\"setCollections\", value);\n    };\n    var setIsOpen = function setIsOpen(value) {\n        store.dispatch(\"setIsOpen\", value);\n    };\n    var setStatus = function setStatus(value) {\n        store.dispatch(\"setStatus\", value);\n    };\n    var setContext = function setContext(value) {\n        store.dispatch(\"setContext\", value);\n    };\n    return {\n        setActiveItemId: setActiveItemId,\n        setQuery: setQuery,\n        setCollections: setCollections,\n        setIsOpen: setIsOpen,\n        setStatus: setStatus,\n        setContext: setContext\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getAutocompleteSetters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getCompletion.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/getCompletion.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCompletion: () => (/* binding */ getCompletion)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getActiveItem.js\");\n\nfunction getCompletion(_ref) {\n    var _getActiveItem;\n    var state = _ref.state;\n    if (state.isOpen === false || state.activeItemId === null) {\n        return null;\n    }\n    return ((_getActiveItem = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getActiveItem)(state)) === null || _getActiveItem === void 0 ? void 0 : _getActiveItem.itemInputValue) || null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vZ2V0Q29tcGxldGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUNqQyxTQUFTQyxjQUFjQyxJQUFJO0lBQ2hDLElBQUlDO0lBQ0osSUFBSUMsUUFBUUYsS0FBS0UsS0FBSztJQUN0QixJQUFJQSxNQUFNQyxNQUFNLEtBQUssU0FBU0QsTUFBTUUsWUFBWSxLQUFLLE1BQU07UUFDekQsT0FBTztJQUNUO0lBQ0EsT0FBTyxDQUFDLENBQUNILGlCQUFpQkgscURBQWFBLENBQUNJLE1BQUssTUFBTyxRQUFRRCxtQkFBbUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsZUFBZUksY0FBYyxLQUFLO0FBQ3JJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vZ2V0Q29tcGxldGlvbi5qcz80NGJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEFjdGl2ZUl0ZW0gfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRDb21wbGV0aW9uKF9yZWYpIHtcbiAgdmFyIF9nZXRBY3RpdmVJdGVtO1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlO1xuICBpZiAoc3RhdGUuaXNPcGVuID09PSBmYWxzZSB8fCBzdGF0ZS5hY3RpdmVJdGVtSWQgPT09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gKChfZ2V0QWN0aXZlSXRlbSA9IGdldEFjdGl2ZUl0ZW0oc3RhdGUpKSA9PT0gbnVsbCB8fCBfZ2V0QWN0aXZlSXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2dldEFjdGl2ZUl0ZW0uaXRlbUlucHV0VmFsdWUpIHx8IG51bGw7XG59Il0sIm5hbWVzIjpbImdldEFjdGl2ZUl0ZW0iLCJnZXRDb21wbGV0aW9uIiwiX3JlZiIsIl9nZXRBY3RpdmVJdGVtIiwic3RhdGUiLCJpc09wZW4iLCJhY3RpdmVJdGVtSWQiLCJpdGVtSW5wdXRWYWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getCompletion.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getDefaultProps.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/getDefaultProps.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultProps: () => (/* binding */ getDefaultProps)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/getItemsCount.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/generateAutocompleteId.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/flatten.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNormalizedSources.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\n\nfunction getDefaultProps(props, pluginSubscribers) {\n    var _props$id;\n    /* eslint-disable no-restricted-globals */ var environment =  false ? 0 : {};\n    /* eslint-enable no-restricted-globals */ var plugins = props.plugins || [];\n    return _objectSpread(_objectSpread({\n        debug: false,\n        openOnFocus: false,\n        placeholder: \"\",\n        autoFocus: false,\n        defaultActiveItemId: null,\n        stallThreshold: 300,\n        insights: false,\n        environment: environment,\n        shouldPanelOpen: function shouldPanelOpen(_ref) {\n            var state = _ref.state;\n            return (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.getItemsCount)(state) > 0;\n        },\n        reshape: function reshape(_ref2) {\n            var sources = _ref2.sources;\n            return sources;\n        }\n    }, props), {}, {\n        // Since `generateAutocompleteId` triggers a side effect (it increments\n        // an internal counter), we don't want to execute it if unnecessary.\n        id: (_props$id = props.id) !== null && _props$id !== void 0 ? _props$id : (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_1__.generateAutocompleteId)(),\n        plugins: plugins,\n        // The following props need to be deeply defaulted.\n        initialState: _objectSpread({\n            activeItemId: null,\n            query: \"\",\n            completion: null,\n            collections: [],\n            isOpen: false,\n            status: \"idle\",\n            context: {}\n        }, props.initialState),\n        onStateChange: function onStateChange(params) {\n            var _props$onStateChange;\n            (_props$onStateChange = props.onStateChange) === null || _props$onStateChange === void 0 ? void 0 : _props$onStateChange.call(props, params);\n            plugins.forEach(function(x) {\n                var _x$onStateChange;\n                return (_x$onStateChange = x.onStateChange) === null || _x$onStateChange === void 0 ? void 0 : _x$onStateChange.call(x, params);\n            });\n        },\n        onSubmit: function onSubmit(params) {\n            var _props$onSubmit;\n            (_props$onSubmit = props.onSubmit) === null || _props$onSubmit === void 0 ? void 0 : _props$onSubmit.call(props, params);\n            plugins.forEach(function(x) {\n                var _x$onSubmit;\n                return (_x$onSubmit = x.onSubmit) === null || _x$onSubmit === void 0 ? void 0 : _x$onSubmit.call(x, params);\n            });\n        },\n        onReset: function onReset(params) {\n            var _props$onReset;\n            (_props$onReset = props.onReset) === null || _props$onReset === void 0 ? void 0 : _props$onReset.call(props, params);\n            plugins.forEach(function(x) {\n                var _x$onReset;\n                return (_x$onReset = x.onReset) === null || _x$onReset === void 0 ? void 0 : _x$onReset.call(x, params);\n            });\n        },\n        getSources: function getSources(params) {\n            return Promise.all([].concat(_toConsumableArray(plugins.map(function(plugin) {\n                return plugin.getSources;\n            })), [\n                props.getSources\n            ]).filter(Boolean).map(function(getSources) {\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getNormalizedSources)(getSources, params);\n            })).then(function(nested) {\n                return (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_3__.flatten)(nested);\n            }).then(function(sources) {\n                return sources.map(function(source) {\n                    return _objectSpread(_objectSpread({}, source), {}, {\n                        onSelect: function onSelect(params) {\n                            source.onSelect(params);\n                            pluginSubscribers.forEach(function(x) {\n                                var _x$onSelect;\n                                return (_x$onSelect = x.onSelect) === null || _x$onSelect === void 0 ? void 0 : _x$onSelect.call(x, params);\n                            });\n                        },\n                        onActive: function onActive(params) {\n                            source.onActive(params);\n                            pluginSubscribers.forEach(function(x) {\n                                var _x$onActive;\n                                return (_x$onActive = x.onActive) === null || _x$onActive === void 0 ? void 0 : _x$onActive.call(x, params);\n                            });\n                        },\n                        onResolve: function onResolve(params) {\n                            source.onResolve(params);\n                            pluginSubscribers.forEach(function(x) {\n                                var _x$onResolve;\n                                return (_x$onResolve = x.onResolve) === null || _x$onResolve === void 0 ? void 0 : _x$onResolve.call(x, params);\n                            });\n                        }\n                    });\n                });\n            });\n        },\n        navigator: _objectSpread({\n            navigate: function navigate(_ref3) {\n                var itemUrl = _ref3.itemUrl;\n                environment.location.assign(itemUrl);\n            },\n            navigateNewTab: function navigateNewTab(_ref4) {\n                var itemUrl = _ref4.itemUrl;\n                var windowReference = environment.open(itemUrl, \"_blank\", \"noopener\");\n                windowReference === null || windowReference === void 0 ? void 0 : windowReference.focus();\n            },\n            navigateNewWindow: function navigateNewWindow(_ref5) {\n                var itemUrl = _ref5.itemUrl;\n                environment.open(itemUrl, \"_blank\", \"noopener\");\n            }\n        }, props.navigator)\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getDefaultProps.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getPropGetters.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/getPropGetters.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPropGetters: () => (/* binding */ getPropGetters)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/noop.js\");\n/* harmony import */ var _onInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./onInput */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onInput.js\");\n/* harmony import */ var _onKeyDown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./onKeyDown */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onKeyDown.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/isOrContainsNode.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getActiveItem.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/isSamsung.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nvar _excluded = [\n    \"props\",\n    \"refresh\",\n    \"store\"\n], _excluded2 = [\n    \"inputElement\",\n    \"formElement\",\n    \"panelElement\"\n], _excluded3 = [\n    \"inputElement\"\n], _excluded4 = [\n    \"inputElement\",\n    \"maxLength\"\n], _excluded5 = [\n    \"sourceIndex\"\n], _excluded6 = [\n    \"sourceIndex\"\n], _excluded7 = [\n    \"item\",\n    \"source\",\n    \"sourceIndex\"\n];\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\n\n\n\nfunction getPropGetters(_ref) {\n    var props = _ref.props, refresh = _ref.refresh, store = _ref.store, setters = _objectWithoutProperties(_ref, _excluded);\n    var getEnvironmentProps = function getEnvironmentProps(providedProps) {\n        var inputElement = providedProps.inputElement, formElement = providedProps.formElement, panelElement = providedProps.panelElement, rest = _objectWithoutProperties(providedProps, _excluded2);\n        function onMouseDownOrTouchStart(event) {\n            // The `onTouchStart`/`onMouseDown` events shouldn't trigger the `blur`\n            // handler when it's not an interaction with Autocomplete.\n            // We detect it with the following heuristics:\n            // - the panel is closed AND there are no pending requests\n            //   (no interaction with the autocomplete, no future state updates)\n            // - OR the touched target is the input element (should open the panel)\n            var isAutocompleteInteraction = store.getState().isOpen || !store.pendingRequests.isEmpty();\n            if (!isAutocompleteInteraction || event.target === inputElement) {\n                return;\n            }\n            // @TODO: support cases where there are multiple Autocomplete instances.\n            // Right now, a second instance makes this computation return false.\n            var isTargetWithinAutocomplete = [\n                formElement,\n                panelElement\n            ].some(function(contextNode) {\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isOrContainsNode)(contextNode, event.target);\n            });\n            if (isTargetWithinAutocomplete === false) {\n                store.dispatch(\"blur\", null);\n                // If requests are still pending when the user closes the panel, they\n                // could reopen the panel once they resolve.\n                // We want to prevent any subsequent query from reopening the panel\n                // because it would result in an unsolicited UI behavior.\n                if (!props.debug) {\n                    store.pendingRequests.cancelAll();\n                }\n            }\n        }\n        return _objectSpread({\n            // We do not rely on the native `blur` event of the input to close the\n            // panel, but rather on a custom `touchstart`/`mousedown` event outside\n            // of the autocomplete elements.\n            // This ensures we don't mistakenly interpret interactions within the\n            // autocomplete (but outside of the input) as a signal to close the panel.\n            // For example, clicking reset button causes an input blur, but if\n            // `openOnFocus=true`, it shouldn't close the panel.\n            // On touch devices, scrolling results (`touchmove`) causes an input blur\n            // but shouldn't close the panel.\n            onTouchStart: onMouseDownOrTouchStart,\n            onMouseDown: onMouseDownOrTouchStart,\n            // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n            // mimic the native platform behavior where the input is blurred to\n            // hide the virtual keyboard. This gives more vertical space to\n            // discover all the suggestions showing up in the panel.\n            onTouchMove: function onTouchMove(event) {\n                if (store.getState().isOpen === false || inputElement !== props.environment.document.activeElement || event.target === inputElement) {\n                    return;\n                }\n                inputElement.blur();\n            }\n        }, rest);\n    };\n    var getRootProps = function getRootProps(rest) {\n        return _objectSpread({\n            role: \"combobox\",\n            \"aria-expanded\": store.getState().isOpen,\n            \"aria-haspopup\": \"listbox\",\n            \"aria-owns\": store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n            \"aria-labelledby\": \"\".concat(props.id, \"-label\")\n        }, rest);\n    };\n    var getFormProps = function getFormProps(providedProps) {\n        var inputElement = providedProps.inputElement, rest = _objectWithoutProperties(providedProps, _excluded3);\n        return _objectSpread({\n            action: \"\",\n            noValidate: true,\n            role: \"search\",\n            onSubmit: function onSubmit(event) {\n                var _providedProps$inputE;\n                event.preventDefault();\n                props.onSubmit(_objectSpread({\n                    event: event,\n                    refresh: refresh,\n                    state: store.getState()\n                }, setters));\n                store.dispatch(\"submit\", null);\n                (_providedProps$inputE = providedProps.inputElement) === null || _providedProps$inputE === void 0 ? void 0 : _providedProps$inputE.blur();\n            },\n            onReset: function onReset(event) {\n                var _providedProps$inputE2;\n                event.preventDefault();\n                props.onReset(_objectSpread({\n                    event: event,\n                    refresh: refresh,\n                    state: store.getState()\n                }, setters));\n                store.dispatch(\"reset\", null);\n                (_providedProps$inputE2 = providedProps.inputElement) === null || _providedProps$inputE2 === void 0 ? void 0 : _providedProps$inputE2.focus();\n            }\n        }, rest);\n    };\n    var getInputProps = function getInputProps(providedProps) {\n        var _props$environment$na;\n        function onFocus(event) {\n            // We want to trigger a query when `openOnFocus` is true\n            // because the panel should open with the current query.\n            if (props.openOnFocus || Boolean(store.getState().query)) {\n                (0,_onInput__WEBPACK_IMPORTED_MODULE_1__.onInput)(_objectSpread({\n                    event: event,\n                    props: props,\n                    query: store.getState().completion || store.getState().query,\n                    refresh: refresh,\n                    store: store\n                }, setters));\n            }\n            store.dispatch(\"focus\", null);\n        }\n        var _ref2 = providedProps || {}, inputElement = _ref2.inputElement, _ref2$maxLength = _ref2.maxLength, maxLength = _ref2$maxLength === void 0 ? 512 : _ref2$maxLength, rest = _objectWithoutProperties(_ref2, _excluded4);\n        var activeItem = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getActiveItem)(store.getState());\n        var userAgent = ((_props$environment$na = props.environment.navigator) === null || _props$environment$na === void 0 ? void 0 : _props$environment$na.userAgent) || \"\";\n        var shouldFallbackKeyHint = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.isSamsung)(userAgent);\n        var enterKeyHint = activeItem !== null && activeItem !== void 0 && activeItem.itemUrl && !shouldFallbackKeyHint ? \"go\" : \"search\";\n        return _objectSpread({\n            \"aria-autocomplete\": \"both\",\n            \"aria-activedescendant\": store.getState().isOpen && store.getState().activeItemId !== null ? \"\".concat(props.id, \"-item-\").concat(store.getState().activeItemId) : undefined,\n            \"aria-controls\": store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n            \"aria-labelledby\": \"\".concat(props.id, \"-label\"),\n            value: store.getState().completion || store.getState().query,\n            id: \"\".concat(props.id, \"-input\"),\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"off\",\n            enterKeyHint: enterKeyHint,\n            spellCheck: \"false\",\n            autoFocus: props.autoFocus,\n            placeholder: props.placeholder,\n            maxLength: maxLength,\n            type: \"search\",\n            onChange: function onChange(event) {\n                (0,_onInput__WEBPACK_IMPORTED_MODULE_1__.onInput)(_objectSpread({\n                    event: event,\n                    props: props,\n                    query: event.currentTarget.value.slice(0, maxLength),\n                    refresh: refresh,\n                    store: store\n                }, setters));\n            },\n            onKeyDown: function onKeyDown(event) {\n                (0,_onKeyDown__WEBPACK_IMPORTED_MODULE_4__.onKeyDown)(_objectSpread({\n                    event: event,\n                    props: props,\n                    refresh: refresh,\n                    store: store\n                }, setters));\n            },\n            onFocus: onFocus,\n            // We don't rely on the `blur` event.\n            // See explanation in `onTouchStart`/`onMouseDown`.\n            // @MAJOR See if we need to keep this handler.\n            onBlur: _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_5__.noop,\n            onClick: function onClick(event) {\n                // When the panel is closed and you click on the input while\n                // the input is focused, the `onFocus` event is not triggered\n                // (default browser behavior).\n                // In an autocomplete context, it makes sense to open the panel in this\n                // case.\n                // We mimic this event by catching the `onClick` event which\n                // triggers the `onFocus` for the panel to open.\n                if (providedProps.inputElement === props.environment.document.activeElement && !store.getState().isOpen) {\n                    onFocus(event);\n                }\n            }\n        }, rest);\n    };\n    var getAutocompleteId = function getAutocompleteId(instanceId, sourceId) {\n        return typeof sourceId !== \"undefined\" ? \"\".concat(instanceId, \"-\").concat(sourceId) : instanceId;\n    };\n    var getLabelProps = function getLabelProps(providedProps) {\n        var _ref3 = providedProps || {}, sourceIndex = _ref3.sourceIndex, rest = _objectWithoutProperties(_ref3, _excluded5);\n        return _objectSpread({\n            htmlFor: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-input\"),\n            id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-label\")\n        }, rest);\n    };\n    var getListProps = function getListProps(providedProps) {\n        var _ref4 = providedProps || {}, sourceIndex = _ref4.sourceIndex, rest = _objectWithoutProperties(_ref4, _excluded6);\n        return _objectSpread({\n            role: \"listbox\",\n            \"aria-labelledby\": \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-label\"),\n            id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-list\")\n        }, rest);\n    };\n    var getPanelProps = function getPanelProps(rest) {\n        return _objectSpread({\n            onMouseDown: function onMouseDown(event) {\n                // Prevents the `activeElement` from being changed to the panel so\n                // that the blur event is not triggered, otherwise it closes the\n                // panel.\n                event.preventDefault();\n            },\n            onMouseLeave: function onMouseLeave() {\n                store.dispatch(\"mouseleave\", null);\n            }\n        }, rest);\n    };\n    var getItemProps = function getItemProps(providedProps) {\n        var item = providedProps.item, source = providedProps.source, sourceIndex = providedProps.sourceIndex, rest = _objectWithoutProperties(providedProps, _excluded7);\n        return _objectSpread({\n            id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-item-\").concat(item.__autocomplete_id),\n            role: \"option\",\n            \"aria-selected\": store.getState().activeItemId === item.__autocomplete_id,\n            onMouseMove: function onMouseMove(event) {\n                if (item.__autocomplete_id === store.getState().activeItemId) {\n                    return;\n                }\n                store.dispatch(\"mousemove\", item.__autocomplete_id);\n                var activeItem = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getActiveItem)(store.getState());\n                if (store.getState().activeItemId !== null && activeItem) {\n                    var _item = activeItem.item, itemInputValue = activeItem.itemInputValue, itemUrl = activeItem.itemUrl, _source = activeItem.source;\n                    _source.onActive(_objectSpread({\n                        event: event,\n                        item: _item,\n                        itemInputValue: itemInputValue,\n                        itemUrl: itemUrl,\n                        refresh: refresh,\n                        source: _source,\n                        state: store.getState()\n                    }, setters));\n                }\n            },\n            onMouseDown: function onMouseDown(event) {\n                // Prevents the `activeElement` from being changed to the item so it\n                // can remain with the current `activeElement`.\n                event.preventDefault();\n            },\n            onClick: function onClick(event) {\n                var itemInputValue = source.getItemInputValue({\n                    item: item,\n                    state: store.getState()\n                });\n                var itemUrl = source.getItemUrl({\n                    item: item,\n                    state: store.getState()\n                });\n                // If `getItemUrl` is provided, it means that the suggestion\n                // is a link, not plain text that aims at updating the query.\n                // We can therefore skip the state change because it will update\n                // the `activeItemId`, resulting in a UI flash, especially\n                // noticeable on mobile.\n                var runPreCommand = itemUrl ? Promise.resolve() : (0,_onInput__WEBPACK_IMPORTED_MODULE_1__.onInput)(_objectSpread({\n                    event: event,\n                    nextState: {\n                        isOpen: false\n                    },\n                    props: props,\n                    query: itemInputValue,\n                    refresh: refresh,\n                    store: store\n                }, setters));\n                runPreCommand.then(function() {\n                    source.onSelect(_objectSpread({\n                        event: event,\n                        item: item,\n                        itemInputValue: itemInputValue,\n                        itemUrl: itemUrl,\n                        refresh: refresh,\n                        source: source,\n                        state: store.getState()\n                    }, setters));\n                });\n            }\n        }, rest);\n    };\n    return {\n        getEnvironmentProps: getEnvironmentProps,\n        getRootProps: getRootProps,\n        getFormProps: getFormProps,\n        getLabelProps: getLabelProps,\n        getInputProps: getInputProps,\n        getPanelProps: getPanelProps,\n        getListProps: getListProps,\n        getItemProps: getItemProps\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getPropGetters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/metadata.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/metadata.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMetadata: () => (/* binding */ getMetadata),\n/* harmony export */   injectMetadata: () => (/* binding */ injectMetadata)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/userAgents.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction getMetadata(_ref) {\n    var _, _options$__autocomple, _options$__autocomple2, _options$__autocomple3;\n    var plugins = _ref.plugins, options = _ref.options;\n    var optionsKey = (_ = (((_options$__autocomple = options.__autocomplete_metadata) === null || _options$__autocomple === void 0 ? void 0 : _options$__autocomple.userAgents) || [])[0]) === null || _ === void 0 ? void 0 : _.segment;\n    var extraOptions = optionsKey ? _defineProperty({}, optionsKey, Object.keys(((_options$__autocomple2 = options.__autocomplete_metadata) === null || _options$__autocomple2 === void 0 ? void 0 : _options$__autocomple2.options) || {})) : {};\n    return {\n        plugins: plugins.map(function(plugin) {\n            return {\n                name: plugin.name,\n                options: Object.keys(plugin.__autocomplete_pluginOptions || [])\n            };\n        }),\n        options: _objectSpread({\n            \"autocomplete-core\": Object.keys(options)\n        }, extraOptions),\n        ua: _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.userAgents.concat(((_options$__autocomple3 = options.__autocomplete_metadata) === null || _options$__autocomple3 === void 0 ? void 0 : _options$__autocomple3.userAgents) || [])\n    };\n}\nfunction injectMetadata(_ref3) {\n    var _environment$navigato, _environment$navigato2;\n    var metadata = _ref3.metadata, environment = _ref3.environment;\n    var isMetadataEnabled = (_environment$navigato = environment.navigator) === null || _environment$navigato === void 0 ? void 0 : (_environment$navigato2 = _environment$navigato.userAgent) === null || _environment$navigato2 === void 0 ? void 0 : _environment$navigato2.includes(\"Algolia Crawler\");\n    if (isMetadataEnabled) {\n        var metadataContainer = environment.document.createElement(\"meta\");\n        var headRef = environment.document.querySelector(\"head\");\n        metadataContainer.name = \"algolia:metadata\";\n        setTimeout(function() {\n            metadataContainer.content = JSON.stringify(metadata);\n            headRef.appendChild(metadataContainer);\n        }, 0);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onInput.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/onInput.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onInput: () => (/* binding */ onInput)\n/* harmony export */ });\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/reshape.js\");\n/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolve */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/resolve.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromise.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getActiveItem.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nvar _excluded = [\n    \"event\",\n    \"nextState\",\n    \"props\",\n    \"query\",\n    \"refresh\",\n    \"store\"\n];\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\n\n\nvar lastStalledId = null;\nvar runConcurrentSafePromise = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.createConcurrentSafePromise)();\nfunction onInput(_ref) {\n    var event = _ref.event, _ref$nextState = _ref.nextState, nextState = _ref$nextState === void 0 ? {} : _ref$nextState, props = _ref.props, query = _ref.query, refresh = _ref.refresh, store = _ref.store, setters = _objectWithoutProperties(_ref, _excluded);\n    if (lastStalledId) {\n        props.environment.clearTimeout(lastStalledId);\n    }\n    var setCollections = setters.setCollections, setIsOpen = setters.setIsOpen, setQuery = setters.setQuery, setActiveItemId = setters.setActiveItemId, setStatus = setters.setStatus;\n    setQuery(query);\n    setActiveItemId(props.defaultActiveItemId);\n    if (!query && props.openOnFocus === false) {\n        var _nextState$isOpen;\n        var collections = store.getState().collections.map(function(collection) {\n            return _objectSpread(_objectSpread({}, collection), {}, {\n                items: []\n            });\n        });\n        setStatus(\"idle\");\n        setCollections(collections);\n        setIsOpen((_nextState$isOpen = nextState.isOpen) !== null && _nextState$isOpen !== void 0 ? _nextState$isOpen : props.shouldPanelOpen({\n            state: store.getState()\n        }));\n        // We make sure to update the latest resolved value of the tracked\n        // promises to keep late resolving promises from \"cancelling\" the state\n        // updates performed in this code path.\n        // We chain with a void promise to respect `onInput`'s expected return type.\n        var _request = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.cancelable)(runConcurrentSafePromise(collections).then(function() {\n            return Promise.resolve();\n        }));\n        return store.pendingRequests.add(_request);\n    }\n    setStatus(\"loading\");\n    lastStalledId = props.environment.setTimeout(function() {\n        setStatus(\"stalled\");\n    }, props.stallThreshold);\n    // We track the entire promise chain triggered by `onInput` before mutating\n    // the Autocomplete state to make sure that any state manipulation is based on\n    // fresh data regardless of when promises individually resolve.\n    // We don't track nested promises and only rely on the full chain resolution,\n    // meaning we should only ever manipulate the state once this concurrent-safe\n    // promise is resolved.\n    var request = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.cancelable)(runConcurrentSafePromise(props.getSources(_objectSpread({\n        query: query,\n        refresh: refresh,\n        state: store.getState()\n    }, setters)).then(function(sources) {\n        return Promise.all(sources.map(function(source) {\n            return Promise.resolve(source.getItems(_objectSpread({\n                query: query,\n                refresh: refresh,\n                state: store.getState()\n            }, setters))).then(function(itemsOrDescription) {\n                return (0,_resolve__WEBPACK_IMPORTED_MODULE_2__.preResolve)(itemsOrDescription, source.sourceId, store.getState());\n            });\n        })).then(_resolve__WEBPACK_IMPORTED_MODULE_2__.resolve).then(function(responses) {\n            return (0,_resolve__WEBPACK_IMPORTED_MODULE_2__.postResolve)(responses, sources, store);\n        }).then(function(collections) {\n            return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({\n                collections: collections,\n                props: props,\n                state: store.getState()\n            });\n        });\n    }))).then(function(collections) {\n        var _nextState$isOpen2;\n        // Parameters passed to `onInput` could be stale when the following code\n        // executes, because `onInput` calls may not resolve in order.\n        // If it becomes a problem we'll need to save the last passed parameters.\n        // See: https://codesandbox.io/s/agitated-cookies-y290z\n        setStatus(\"idle\");\n        setCollections(collections);\n        var isPanelOpen = props.shouldPanelOpen({\n            state: store.getState()\n        });\n        setIsOpen((_nextState$isOpen2 = nextState.isOpen) !== null && _nextState$isOpen2 !== void 0 ? _nextState$isOpen2 : props.openOnFocus && !query && isPanelOpen || isPanelOpen);\n        var highlightedItem = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getActiveItem)(store.getState());\n        if (store.getState().activeItemId !== null && highlightedItem) {\n            var item = highlightedItem.item, itemInputValue = highlightedItem.itemInputValue, itemUrl = highlightedItem.itemUrl, source = highlightedItem.source;\n            source.onActive(_objectSpread({\n                event: event,\n                item: item,\n                itemInputValue: itemInputValue,\n                itemUrl: itemUrl,\n                refresh: refresh,\n                source: source,\n                state: store.getState()\n            }, setters));\n        }\n    }).finally(function() {\n        setStatus(\"idle\");\n        if (lastStalledId) {\n            props.environment.clearTimeout(lastStalledId);\n        }\n    });\n    return store.pendingRequests.add(request);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onInput.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onKeyDown.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/onKeyDown.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onKeyDown: () => (/* binding */ onKeyDown)\n/* harmony export */ });\n/* harmony import */ var _onInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./onInput */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onInput.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getActiveItem.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nvar _excluded = [\n    \"event\",\n    \"props\",\n    \"refresh\",\n    \"store\"\n];\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\n\nfunction onKeyDown(_ref) {\n    var event = _ref.event, props = _ref.props, refresh = _ref.refresh, store = _ref.store, setters = _objectWithoutProperties(_ref, _excluded);\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n        // eslint-disable-next-line no-inner-declarations\n        var triggerScrollIntoView = function triggerScrollIntoView() {\n            var nodeItem = props.environment.document.getElementById(\"\".concat(props.id, \"-item-\").concat(store.getState().activeItemId));\n            if (nodeItem) {\n                if (nodeItem.scrollIntoViewIfNeeded) {\n                    nodeItem.scrollIntoViewIfNeeded(false);\n                } else {\n                    nodeItem.scrollIntoView(false);\n                }\n            }\n        }; // eslint-disable-next-line no-inner-declarations\n        var triggerOnActive = function triggerOnActive() {\n            var highlightedItem = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getActiveItem)(store.getState());\n            if (store.getState().activeItemId !== null && highlightedItem) {\n                var item = highlightedItem.item, itemInputValue = highlightedItem.itemInputValue, itemUrl = highlightedItem.itemUrl, source = highlightedItem.source;\n                source.onActive(_objectSpread({\n                    event: event,\n                    item: item,\n                    itemInputValue: itemInputValue,\n                    itemUrl: itemUrl,\n                    refresh: refresh,\n                    source: source,\n                    state: store.getState()\n                }, setters));\n            }\n        }; // Default browser behavior changes the caret placement on ArrowUp and\n        // ArrowDown.\n        event.preventDefault();\n        // When re-opening the panel, we need to split the logic to keep the actions\n        // synchronized as `onInput` returns a promise.\n        if (store.getState().isOpen === false && (props.openOnFocus || Boolean(store.getState().query))) {\n            (0,_onInput__WEBPACK_IMPORTED_MODULE_1__.onInput)(_objectSpread({\n                event: event,\n                props: props,\n                query: store.getState().query,\n                refresh: refresh,\n                store: store\n            }, setters)).then(function() {\n                store.dispatch(event.key, {\n                    nextActiveItemId: props.defaultActiveItemId\n                });\n                triggerOnActive();\n                // Since we rely on the DOM, we need to wait for all the micro tasks to\n                // finish (which include re-opening the panel) to make sure all the\n                // elements are available.\n                setTimeout(triggerScrollIntoView, 0);\n            });\n        } else {\n            store.dispatch(event.key, {});\n            triggerOnActive();\n            triggerScrollIntoView();\n        }\n    } else if (event.key === \"Escape\") {\n        // This prevents the default browser behavior on `input[type=\"search\"]`\n        // from removing the query right away because we first want to close the\n        // panel.\n        event.preventDefault();\n        store.dispatch(event.key, null);\n        // Hitting the `Escape` key signals the end of a user interaction with the\n        // autocomplete. At this point, we should ignore any requests that are still\n        // pending and could reopen the panel once they resolve, because that would\n        // result in an unsolicited UI behavior.\n        store.pendingRequests.cancelAll();\n    } else if (event.key === \"Tab\") {\n        store.dispatch(\"blur\", null);\n        // Hitting the `Escape` key signals the end of a user interaction with the\n        // autocomplete. At this point, we should ignore any requests that are still\n        // pending and could reopen the panel once they resolve, because that would\n        // result in an unsolicited UI behavior.\n        store.pendingRequests.cancelAll();\n    } else if (event.key === \"Enter\") {\n        // No active item, so we let the browser handle the native `onSubmit` form\n        // event.\n        if (store.getState().activeItemId === null || store.getState().collections.every(function(collection) {\n            return collection.items.length === 0;\n        })) {\n            // If requests are still pending when the panel closes, they could reopen\n            // the panel once they resolve.\n            // We want to prevent any subsequent query from reopening the panel\n            // because it would result in an unsolicited UI behavior.\n            if (!props.debug) {\n                store.pendingRequests.cancelAll();\n            }\n            return;\n        }\n        // This prevents the `onSubmit` event to be sent because an item is\n        // highlighted.\n        event.preventDefault();\n        var _ref2 = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getActiveItem)(store.getState()), item = _ref2.item, itemInputValue = _ref2.itemInputValue, itemUrl = _ref2.itemUrl, source = _ref2.source;\n        if (event.metaKey || event.ctrlKey) {\n            if (itemUrl !== undefined) {\n                source.onSelect(_objectSpread({\n                    event: event,\n                    item: item,\n                    itemInputValue: itemInputValue,\n                    itemUrl: itemUrl,\n                    refresh: refresh,\n                    source: source,\n                    state: store.getState()\n                }, setters));\n                props.navigator.navigateNewTab({\n                    itemUrl: itemUrl,\n                    item: item,\n                    state: store.getState()\n                });\n            }\n        } else if (event.shiftKey) {\n            if (itemUrl !== undefined) {\n                source.onSelect(_objectSpread({\n                    event: event,\n                    item: item,\n                    itemInputValue: itemInputValue,\n                    itemUrl: itemUrl,\n                    refresh: refresh,\n                    source: source,\n                    state: store.getState()\n                }, setters));\n                props.navigator.navigateNewWindow({\n                    itemUrl: itemUrl,\n                    item: item,\n                    state: store.getState()\n                });\n            }\n        } else if (event.altKey) {\n        // Keep native browser behavior\n        } else {\n            if (itemUrl !== undefined) {\n                source.onSelect(_objectSpread({\n                    event: event,\n                    item: item,\n                    itemInputValue: itemInputValue,\n                    itemUrl: itemUrl,\n                    refresh: refresh,\n                    source: source,\n                    state: store.getState()\n                }, setters));\n                props.navigator.navigate({\n                    itemUrl: itemUrl,\n                    item: item,\n                    state: store.getState()\n                });\n                return;\n            }\n            (0,_onInput__WEBPACK_IMPORTED_MODULE_1__.onInput)(_objectSpread({\n                event: event,\n                nextState: {\n                    isOpen: false\n                },\n                props: props,\n                query: itemInputValue,\n                refresh: refresh,\n                store: store\n            }, setters)).then(function() {\n                source.onSelect(_objectSpread({\n                    event: event,\n                    item: item,\n                    itemInputValue: itemInputValue,\n                    itemUrl: itemUrl,\n                    refresh: refresh,\n                    source: source,\n                    state: store.getState()\n                }, setters));\n            });\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/onKeyDown.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/reshape.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/reshape.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reshape: () => (/* binding */ reshape)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/flatten.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction reshape(_ref) {\n    var collections = _ref.collections, props = _ref.props, state = _ref.state;\n    // Sources are grouped by `sourceId` to conveniently pick them via destructuring.\n    // Example: `const { recentSearchesPlugin } = sourcesBySourceId`\n    var originalSourcesBySourceId = collections.reduce(function(acc, collection) {\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, collection.source.sourceId, _objectSpread(_objectSpread({}, collection.source), {}, {\n            getItems: function getItems() {\n                // We provide the resolved items from the collection to the `reshape` prop.\n                return (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.flatten)(collection.items);\n            }\n        })));\n    }, {});\n    var _props$plugins$reduce = props.plugins.reduce(function(acc, plugin) {\n        if (plugin.reshape) {\n            return plugin.reshape(acc);\n        }\n        return acc;\n    }, {\n        sourcesBySourceId: originalSourcesBySourceId,\n        state: state\n    }), sourcesBySourceId = _props$plugins$reduce.sourcesBySourceId;\n    var reshapeSources = props.reshape({\n        sourcesBySourceId: sourcesBySourceId,\n        sources: Object.values(sourcesBySourceId),\n        state: state\n    });\n    // We reconstruct the collections with the items modified by the `reshape` prop.\n    return (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.flatten)(reshapeSources).filter(Boolean).map(function(source) {\n        return {\n            source: source,\n            items: source.getItems()\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/reshape.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/resolve.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/resolve.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   postResolve: () => (/* binding */ postResolve),\n/* harmony export */   preResolve: () => (/* binding */ preResolve),\n/* harmony export */   resolve: () => (/* binding */ resolve)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/flatten.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/invariant.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/decycle.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/mapToAlgoliaResponse.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction isDescription(item) {\n    return Boolean(item.execute);\n}\nfunction isRequesterDescription(description) {\n    return Boolean(description === null || description === void 0 ? void 0 : description.execute);\n}\nfunction preResolve(itemsOrDescription, sourceId, state) {\n    if (isRequesterDescription(itemsOrDescription)) {\n        var contextParameters = itemsOrDescription.requesterId === \"algolia\" ? Object.assign.apply(Object, [\n            {}\n        ].concat(_toConsumableArray(Object.keys(state.context).map(function(key) {\n            var _state$context$key;\n            return (_state$context$key = state.context[key]) === null || _state$context$key === void 0 ? void 0 : _state$context$key.__algoliaSearchParameters;\n        })))) : {};\n        return _objectSpread(_objectSpread({}, itemsOrDescription), {}, {\n            requests: itemsOrDescription.queries.map(function(query) {\n                return {\n                    query: itemsOrDescription.requesterId === \"algolia\" ? _objectSpread(_objectSpread({}, query), {}, {\n                        params: _objectSpread(_objectSpread({}, contextParameters), query.params)\n                    }) : query,\n                    sourceId: sourceId,\n                    transformResponse: itemsOrDescription.transformResponse\n                };\n            })\n        });\n    }\n    return {\n        items: itemsOrDescription,\n        sourceId: sourceId\n    };\n}\nfunction resolve(items) {\n    var packed = items.reduce(function(acc, current) {\n        if (!isDescription(current)) {\n            acc.push(current);\n            return acc;\n        }\n        var searchClient = current.searchClient, execute = current.execute, requesterId = current.requesterId, requests = current.requests;\n        var container = acc.find(function(item) {\n            return isDescription(current) && isDescription(item) && item.searchClient === searchClient && Boolean(requesterId) && item.requesterId === requesterId;\n        });\n        if (container) {\n            var _container$items;\n            (_container$items = container.items).push.apply(_container$items, _toConsumableArray(requests));\n        } else {\n            var request = {\n                execute: execute,\n                requesterId: requesterId,\n                items: requests,\n                searchClient: searchClient\n            };\n            acc.push(request);\n        }\n        return acc;\n    }, []);\n    var values = packed.map(function(maybeDescription) {\n        if (!isDescription(maybeDescription)) {\n            return Promise.resolve(maybeDescription);\n        }\n        var _ref = maybeDescription, execute = _ref.execute, items = _ref.items, searchClient = _ref.searchClient;\n        return execute({\n            searchClient: searchClient,\n            requests: items\n        });\n    });\n    return Promise.all(values).then(function(responses) {\n        return (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.flatten)(responses);\n    });\n}\nfunction postResolve(responses, sources, store) {\n    return sources.map(function(source) {\n        var matches = responses.filter(function(response) {\n            return response.sourceId === source.sourceId;\n        });\n        var results = matches.map(function(_ref2) {\n            var items = _ref2.items;\n            return items;\n        });\n        var transform = matches[0].transformResponse;\n        var items = transform ? transform((0,_utils__WEBPACK_IMPORTED_MODULE_1__.mapToAlgoliaResponse)(results)) : results;\n        source.onResolve({\n            source: source,\n            results: results,\n            items: items,\n            state: store.getState()\n        });\n        (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__.invariant)(Array.isArray(items), function() {\n            return 'The `getItems` function from source \"'.concat(source.sourceId, '\" must return an array of items but returned type ').concat(JSON.stringify(_typeof(items)), \":\\n\\n\").concat(JSON.stringify((0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_3__.decycle)(items), null, 2), \".\\n\\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems\");\n        });\n        (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__.invariant)(items.every(Boolean), 'The `getItems` function from source \"'.concat(source.sourceId, '\" must return an array of items but returned ').concat(JSON.stringify(undefined), \".\\n\\nDid you forget to return items?\\n\\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems\"));\n        return {\n            source: source,\n            items: items\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/resolve.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/stateReducer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/stateReducer.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stateReducer: () => (/* binding */ stateReducer)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/getItemsCount.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/invariant.js\");\n/* harmony import */ var _getCompletion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getCompletion */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/getCompletion.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNextActiveItemId.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\n\n\nvar stateReducer = function stateReducer(state, action) {\n    switch(action.type){\n        case \"setActiveItemId\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: action.payload\n                });\n            }\n        case \"setQuery\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    query: action.payload,\n                    completion: null\n                });\n            }\n        case \"setCollections\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    collections: action.payload\n                });\n            }\n        case \"setIsOpen\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    isOpen: action.payload\n                });\n            }\n        case \"setStatus\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    status: action.payload\n                });\n            }\n        case \"setContext\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    context: _objectSpread(_objectSpread({}, state.context), action.payload)\n                });\n            }\n        case \"ArrowDown\":\n            {\n                var nextState = _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: action.payload.hasOwnProperty(\"nextActiveItemId\") ? action.payload.nextActiveItemId : (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getNextActiveItemId)(1, state.activeItemId, (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_1__.getItemsCount)(state), action.props.defaultActiveItemId)\n                });\n                return _objectSpread(_objectSpread({}, nextState), {}, {\n                    completion: (0,_getCompletion__WEBPACK_IMPORTED_MODULE_2__.getCompletion)({\n                        state: nextState\n                    })\n                });\n            }\n        case \"ArrowUp\":\n            {\n                var _nextState = _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getNextActiveItemId)(-1, state.activeItemId, (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_1__.getItemsCount)(state), action.props.defaultActiveItemId)\n                });\n                return _objectSpread(_objectSpread({}, _nextState), {}, {\n                    completion: (0,_getCompletion__WEBPACK_IMPORTED_MODULE_2__.getCompletion)({\n                        state: _nextState\n                    })\n                });\n            }\n        case \"Escape\":\n            {\n                if (state.isOpen) {\n                    return _objectSpread(_objectSpread({}, state), {}, {\n                        activeItemId: null,\n                        isOpen: false,\n                        completion: null\n                    });\n                }\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: null,\n                    query: \"\",\n                    status: \"idle\",\n                    collections: []\n                });\n            }\n        case \"submit\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: null,\n                    isOpen: false,\n                    status: \"idle\"\n                });\n            }\n        case \"reset\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: // Since we open the panel on reset when openOnFocus=true\n                    // we need to restore the highlighted index to the defaultActiveItemId. (DocSearch use-case)\n                    // Since we close the panel when openOnFocus=false\n                    // we lose track of the highlighted index. (Query-suggestions use-case)\n                    action.props.openOnFocus === true ? action.props.defaultActiveItemId : null,\n                    status: \"idle\",\n                    query: \"\"\n                });\n            }\n        case \"focus\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: action.props.defaultActiveItemId,\n                    isOpen: (action.props.openOnFocus || Boolean(state.query)) && action.props.shouldPanelOpen({\n                        state: state\n                    })\n                });\n            }\n        case \"blur\":\n            {\n                if (action.props.debug) {\n                    return state;\n                }\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    isOpen: false,\n                    activeItemId: null\n                });\n            }\n        case \"mousemove\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: action.payload\n                });\n            }\n        case \"mouseleave\":\n            {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                    activeItemId: action.props.defaultActiveItemId\n                });\n            }\n        default:\n            (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_3__.invariant)(false, \"The reducer action \".concat(JSON.stringify(action.type), \" is not supported.\"));\n            return state;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/stateReducer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromise.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromise.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelable: () => (/* binding */ cancelable),\n/* harmony export */   createCancelablePromise: () => (/* binding */ createCancelablePromise)\n/* harmony export */ });\nfunction createInternalCancelablePromise(promise, initialState) {\n    var state = initialState;\n    return {\n        then: function then(onfulfilled, onrejected) {\n            return createInternalCancelablePromise(promise.then(createCallback(onfulfilled, state, promise), createCallback(onrejected, state, promise)), state);\n        },\n        catch: function _catch(onrejected) {\n            return createInternalCancelablePromise(promise.catch(createCallback(onrejected, state, promise)), state);\n        },\n        finally: function _finally(onfinally) {\n            if (onfinally) {\n                state.onCancelList.push(onfinally);\n            }\n            return createInternalCancelablePromise(promise.finally(createCallback(onfinally && function() {\n                state.onCancelList = [];\n                return onfinally();\n            }, state, promise)), state);\n        },\n        cancel: function cancel() {\n            state.isCanceled = true;\n            var callbacks = state.onCancelList;\n            state.onCancelList = [];\n            callbacks.forEach(function(callback) {\n                callback();\n            });\n        },\n        isCanceled: function isCanceled() {\n            return state.isCanceled === true;\n        }\n    };\n}\nfunction createCancelablePromise(executor) {\n    return createInternalCancelablePromise(new Promise(function(resolve, reject) {\n        return executor(resolve, reject);\n    }), {\n        isCanceled: false,\n        onCancelList: []\n    });\n}\ncreateCancelablePromise.resolve = function(value) {\n    return cancelable(Promise.resolve(value));\n};\ncreateCancelablePromise.reject = function(reason) {\n    return cancelable(Promise.reject(reason));\n};\nfunction cancelable(promise) {\n    return createInternalCancelablePromise(promise, {\n        isCanceled: false,\n        onCancelList: []\n    });\n}\nfunction createCallback(onResult, state, fallback) {\n    if (!onResult) {\n        return fallback;\n    }\n    return function callback(arg) {\n        if (state.isCanceled) {\n            return arg;\n        }\n        return onResult(arg);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvY3JlYXRlQ2FuY2VsYWJsZVByb21pc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxTQUFTQSxnQ0FBZ0NDLE9BQU8sRUFBRUMsWUFBWTtJQUM1RCxJQUFJQyxRQUFRRDtJQUNaLE9BQU87UUFDTEUsTUFBTSxTQUFTQSxLQUFLQyxXQUFXLEVBQUVDLFVBQVU7WUFDekMsT0FBT04sZ0NBQWdDQyxRQUFRRyxJQUFJLENBQUNHLGVBQWVGLGFBQWFGLE9BQU9GLFVBQVVNLGVBQWVELFlBQVlILE9BQU9GLFdBQVdFO1FBQ2hKO1FBQ0FLLE9BQU8sU0FBU0MsT0FBT0gsVUFBVTtZQUMvQixPQUFPTixnQ0FBZ0NDLFFBQVFPLEtBQUssQ0FBQ0QsZUFBZUQsWUFBWUgsT0FBT0YsV0FBV0U7UUFDcEc7UUFDQU8sU0FBUyxTQUFTQyxTQUFTQyxTQUFTO1lBQ2xDLElBQUlBLFdBQVc7Z0JBQ2JULE1BQU1VLFlBQVksQ0FBQ0MsSUFBSSxDQUFDRjtZQUMxQjtZQUNBLE9BQU9aLGdDQUFnQ0MsUUFBUVMsT0FBTyxDQUFDSCxlQUFlSyxhQUFhO2dCQUNqRlQsTUFBTVUsWUFBWSxHQUFHLEVBQUU7Z0JBQ3ZCLE9BQU9EO1lBQ1QsR0FBR1QsT0FBT0YsV0FBV0U7UUFDdkI7UUFDQVksUUFBUSxTQUFTQTtZQUNmWixNQUFNYSxVQUFVLEdBQUc7WUFDbkIsSUFBSUMsWUFBWWQsTUFBTVUsWUFBWTtZQUNsQ1YsTUFBTVUsWUFBWSxHQUFHLEVBQUU7WUFDdkJJLFVBQVVDLE9BQU8sQ0FBQyxTQUFVQyxRQUFRO2dCQUNsQ0E7WUFDRjtRQUNGO1FBQ0FILFlBQVksU0FBU0E7WUFDbkIsT0FBT2IsTUFBTWEsVUFBVSxLQUFLO1FBQzlCO0lBQ0Y7QUFDRjtBQUNPLFNBQVNJLHdCQUF3QkMsUUFBUTtJQUM5QyxPQUFPckIsZ0NBQWdDLElBQUlzQixRQUFRLFNBQVVDLE9BQU8sRUFBRUMsTUFBTTtRQUMxRSxPQUFPSCxTQUFTRSxTQUFTQztJQUMzQixJQUFJO1FBQ0ZSLFlBQVk7UUFDWkgsY0FBYyxFQUFFO0lBQ2xCO0FBQ0Y7QUFDQU8sd0JBQXdCRyxPQUFPLEdBQUcsU0FBVUUsS0FBSztJQUMvQyxPQUFPQyxXQUFXSixRQUFRQyxPQUFPLENBQUNFO0FBQ3BDO0FBQ0FMLHdCQUF3QkksTUFBTSxHQUFHLFNBQVVHLE1BQU07SUFDL0MsT0FBT0QsV0FBV0osUUFBUUUsTUFBTSxDQUFDRztBQUNuQztBQUNPLFNBQVNELFdBQVd6QixPQUFPO0lBQ2hDLE9BQU9ELGdDQUFnQ0MsU0FBUztRQUM5Q2UsWUFBWTtRQUNaSCxjQUFjLEVBQUU7SUFDbEI7QUFDRjtBQUNBLFNBQVNOLGVBQWVxQixRQUFRLEVBQUV6QixLQUFLLEVBQUUwQixRQUFRO0lBQy9DLElBQUksQ0FBQ0QsVUFBVTtRQUNiLE9BQU9DO0lBQ1Q7SUFDQSxPQUFPLFNBQVNWLFNBQVNXLEdBQUc7UUFDMUIsSUFBSTNCLE1BQU1hLFVBQVUsRUFBRTtZQUNwQixPQUFPYztRQUNUO1FBQ0EsT0FBT0YsU0FBU0U7SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1jb3JlL2Rpc3QvZXNtL3V0aWxzL2NyZWF0ZUNhbmNlbGFibGVQcm9taXNlLmpzPzUwY2UiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY3JlYXRlSW50ZXJuYWxDYW5jZWxhYmxlUHJvbWlzZShwcm9taXNlLCBpbml0aWFsU3RhdGUpIHtcbiAgdmFyIHN0YXRlID0gaW5pdGlhbFN0YXRlO1xuICByZXR1cm4ge1xuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25mdWxmaWxsZWQsIG9ucmVqZWN0ZWQpIHtcbiAgICAgIHJldHVybiBjcmVhdGVJbnRlcm5hbENhbmNlbGFibGVQcm9taXNlKHByb21pc2UudGhlbihjcmVhdGVDYWxsYmFjayhvbmZ1bGZpbGxlZCwgc3RhdGUsIHByb21pc2UpLCBjcmVhdGVDYWxsYmFjayhvbnJlamVjdGVkLCBzdGF0ZSwgcHJvbWlzZSkpLCBzdGF0ZSk7XG4gICAgfSxcbiAgICBjYXRjaDogZnVuY3Rpb24gX2NhdGNoKG9ucmVqZWN0ZWQpIHtcbiAgICAgIHJldHVybiBjcmVhdGVJbnRlcm5hbENhbmNlbGFibGVQcm9taXNlKHByb21pc2UuY2F0Y2goY3JlYXRlQ2FsbGJhY2sob25yZWplY3RlZCwgc3RhdGUsIHByb21pc2UpKSwgc3RhdGUpO1xuICAgIH0sXG4gICAgZmluYWxseTogZnVuY3Rpb24gX2ZpbmFsbHkob25maW5hbGx5KSB7XG4gICAgICBpZiAob25maW5hbGx5KSB7XG4gICAgICAgIHN0YXRlLm9uQ2FuY2VsTGlzdC5wdXNoKG9uZmluYWxseSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY3JlYXRlSW50ZXJuYWxDYW5jZWxhYmxlUHJvbWlzZShwcm9taXNlLmZpbmFsbHkoY3JlYXRlQ2FsbGJhY2sob25maW5hbGx5ICYmIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc3RhdGUub25DYW5jZWxMaXN0ID0gW107XG4gICAgICAgIHJldHVybiBvbmZpbmFsbHkoKTtcbiAgICAgIH0sIHN0YXRlLCBwcm9taXNlKSksIHN0YXRlKTtcbiAgICB9LFxuICAgIGNhbmNlbDogZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgICAgc3RhdGUuaXNDYW5jZWxlZCA9IHRydWU7XG4gICAgICB2YXIgY2FsbGJhY2tzID0gc3RhdGUub25DYW5jZWxMaXN0O1xuICAgICAgc3RhdGUub25DYW5jZWxMaXN0ID0gW107XG4gICAgICBjYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgaXNDYW5jZWxlZDogZnVuY3Rpb24gaXNDYW5jZWxlZCgpIHtcbiAgICAgIHJldHVybiBzdGF0ZS5pc0NhbmNlbGVkID09PSB0cnVlO1xuICAgIH1cbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDYW5jZWxhYmxlUHJvbWlzZShleGVjdXRvcikge1xuICByZXR1cm4gY3JlYXRlSW50ZXJuYWxDYW5jZWxhYmxlUHJvbWlzZShuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgcmV0dXJuIGV4ZWN1dG9yKHJlc29sdmUsIHJlamVjdCk7XG4gIH0pLCB7XG4gICAgaXNDYW5jZWxlZDogZmFsc2UsXG4gICAgb25DYW5jZWxMaXN0OiBbXVxuICB9KTtcbn1cbmNyZWF0ZUNhbmNlbGFibGVQcm9taXNlLnJlc29sdmUgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIGNhbmNlbGFibGUoUHJvbWlzZS5yZXNvbHZlKHZhbHVlKSk7XG59O1xuY3JlYXRlQ2FuY2VsYWJsZVByb21pc2UucmVqZWN0ID0gZnVuY3Rpb24gKHJlYXNvbikge1xuICByZXR1cm4gY2FuY2VsYWJsZShQcm9taXNlLnJlamVjdChyZWFzb24pKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gY2FuY2VsYWJsZShwcm9taXNlKSB7XG4gIHJldHVybiBjcmVhdGVJbnRlcm5hbENhbmNlbGFibGVQcm9taXNlKHByb21pc2UsIHtcbiAgICBpc0NhbmNlbGVkOiBmYWxzZSxcbiAgICBvbkNhbmNlbExpc3Q6IFtdXG4gIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlQ2FsbGJhY2sob25SZXN1bHQsIHN0YXRlLCBmYWxsYmFjaykge1xuICBpZiAoIW9uUmVzdWx0KSB7XG4gICAgcmV0dXJuIGZhbGxiYWNrO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiBjYWxsYmFjayhhcmcpIHtcbiAgICBpZiAoc3RhdGUuaXNDYW5jZWxlZCkge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9XG4gICAgcmV0dXJuIG9uUmVzdWx0KGFyZyk7XG4gIH07XG59Il0sIm5hbWVzIjpbImNyZWF0ZUludGVybmFsQ2FuY2VsYWJsZVByb21pc2UiLCJwcm9taXNlIiwiaW5pdGlhbFN0YXRlIiwic3RhdGUiLCJ0aGVuIiwib25mdWxmaWxsZWQiLCJvbnJlamVjdGVkIiwiY3JlYXRlQ2FsbGJhY2siLCJjYXRjaCIsIl9jYXRjaCIsImZpbmFsbHkiLCJfZmluYWxseSIsIm9uZmluYWxseSIsIm9uQ2FuY2VsTGlzdCIsInB1c2giLCJjYW5jZWwiLCJpc0NhbmNlbGVkIiwiY2FsbGJhY2tzIiwiZm9yRWFjaCIsImNhbGxiYWNrIiwiY3JlYXRlQ2FuY2VsYWJsZVByb21pc2UiLCJleGVjdXRvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwidmFsdWUiLCJjYW5jZWxhYmxlIiwicmVhc29uIiwib25SZXN1bHQiLCJmYWxsYmFjayIsImFyZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromiseList.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromiseList.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCancelablePromiseList: () => (/* binding */ createCancelablePromiseList)\n/* harmony export */ });\nfunction createCancelablePromiseList() {\n    var list = [];\n    return {\n        add: function add(cancelablePromise) {\n            list.push(cancelablePromise);\n            return cancelablePromise.finally(function() {\n                list = list.filter(function(item) {\n                    return item !== cancelablePromise;\n                });\n            });\n        },\n        cancelAll: function cancelAll() {\n            list.forEach(function(promise) {\n                return promise.cancel();\n            });\n        },\n        isEmpty: function isEmpty() {\n            return list.length === 0;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvY3JlYXRlQ2FuY2VsYWJsZVByb21pc2VMaXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQTtJQUNkLElBQUlDLE9BQU8sRUFBRTtJQUNiLE9BQU87UUFDTEMsS0FBSyxTQUFTQSxJQUFJQyxpQkFBaUI7WUFDakNGLEtBQUtHLElBQUksQ0FBQ0Q7WUFDVixPQUFPQSxrQkFBa0JFLE9BQU8sQ0FBQztnQkFDL0JKLE9BQU9BLEtBQUtLLE1BQU0sQ0FBQyxTQUFVQyxJQUFJO29CQUMvQixPQUFPQSxTQUFTSjtnQkFDbEI7WUFDRjtRQUNGO1FBQ0FLLFdBQVcsU0FBU0E7WUFDbEJQLEtBQUtRLE9BQU8sQ0FBQyxTQUFVQyxPQUFPO2dCQUM1QixPQUFPQSxRQUFRQyxNQUFNO1lBQ3ZCO1FBQ0Y7UUFDQUMsU0FBUyxTQUFTQTtZQUNoQixPQUFPWCxLQUFLWSxNQUFNLEtBQUs7UUFDekI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvY3JlYXRlQ2FuY2VsYWJsZVByb21pc2VMaXN0LmpzPzI1ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNhbmNlbGFibGVQcm9taXNlTGlzdCgpIHtcbiAgdmFyIGxpc3QgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBhZGQ6IGZ1bmN0aW9uIGFkZChjYW5jZWxhYmxlUHJvbWlzZSkge1xuICAgICAgbGlzdC5wdXNoKGNhbmNlbGFibGVQcm9taXNlKTtcbiAgICAgIHJldHVybiBjYW5jZWxhYmxlUHJvbWlzZS5maW5hbGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGlzdCA9IGxpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGNhbmNlbGFibGVQcm9taXNlO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgY2FuY2VsQWxsOiBmdW5jdGlvbiBjYW5jZWxBbGwoKSB7XG4gICAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2UuY2FuY2VsKCk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGlzRW1wdHk6IGZ1bmN0aW9uIGlzRW1wdHkoKSB7XG4gICAgICByZXR1cm4gbGlzdC5sZW5ndGggPT09IDA7XG4gICAgfVxuICB9O1xufSJdLCJuYW1lcyI6WyJjcmVhdGVDYW5jZWxhYmxlUHJvbWlzZUxpc3QiLCJsaXN0IiwiYWRkIiwiY2FuY2VsYWJsZVByb21pc2UiLCJwdXNoIiwiZmluYWxseSIsImZpbHRlciIsIml0ZW0iLCJjYW5jZWxBbGwiLCJmb3JFYWNoIiwicHJvbWlzZSIsImNhbmNlbCIsImlzRW1wdHkiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createCancelablePromiseList.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConcurrentSafePromise: () => (/* binding */ createConcurrentSafePromise)\n/* harmony export */ });\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */ function createConcurrentSafePromise() {\n    var basePromiseId = -1;\n    var latestResolvedId = -1;\n    var latestResolvedValue = undefined;\n    return function runConcurrentSafePromise(promise) {\n        basePromiseId++;\n        var currentPromiseId = basePromiseId;\n        return Promise.resolve(promise).then(function(x) {\n            // The promise might take too long to resolve and get outdated. This would\n            // result in resolving stale values.\n            // When this happens, we ignore the promise value and return the one\n            // coming from the latest resolved value.\n            //\n            // +----------------------------------+\n            // |        100ms                     |\n            // | run(1) +--->  R1                 |\n            // |        300ms                     |\n            // | run(2) +-------------> R2 (SKIP) |\n            // |        200ms                     |\n            // | run(3) +--------> R3             |\n            // +----------------------------------+\n            if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n                return latestResolvedValue;\n            }\n            latestResolvedId = currentPromiseId;\n            latestResolvedValue = x;\n            return x;\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvY3JlYXRlQ29uY3VycmVudFNhZmVQcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUNNLFNBQVNBO0lBQ2QsSUFBSUMsZ0JBQWdCLENBQUM7SUFDckIsSUFBSUMsbUJBQW1CLENBQUM7SUFDeEIsSUFBSUMsc0JBQXNCQztJQUMxQixPQUFPLFNBQVNDLHlCQUF5QkMsT0FBTztRQUM5Q0w7UUFDQSxJQUFJTSxtQkFBbUJOO1FBQ3ZCLE9BQU9PLFFBQVFDLE9BQU8sQ0FBQ0gsU0FBU0ksSUFBSSxDQUFDLFNBQVVDLENBQUM7WUFDOUMsMEVBQTBFO1lBQzFFLG9DQUFvQztZQUNwQyxvRUFBb0U7WUFDcEUseUNBQXlDO1lBQ3pDLEVBQUU7WUFDRix1Q0FBdUM7WUFDdkMsdUNBQXVDO1lBQ3ZDLHVDQUF1QztZQUN2Qyx1Q0FBdUM7WUFDdkMsdUNBQXVDO1lBQ3ZDLHVDQUF1QztZQUN2Qyx1Q0FBdUM7WUFDdkMsdUNBQXVDO1lBQ3ZDLElBQUlSLHVCQUF1QkksbUJBQW1CTCxrQkFBa0I7Z0JBQzlELE9BQU9DO1lBQ1Q7WUFDQUQsbUJBQW1CSztZQUNuQkosc0JBQXNCUTtZQUN0QixPQUFPQTtRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1jb3JlL2Rpc3QvZXNtL3V0aWxzL2NyZWF0ZUNvbmN1cnJlbnRTYWZlUHJvbWlzZS5qcz8yYzgzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIHJ1bm5lciB0aGF0IGV4ZWN1dGVzIHByb21pc2VzIGluIGEgY29uY3VycmVudC1zYWZlIHdheS5cbiAqXG4gKiBUaGlzIGlzIHVzZWZ1bCB0byBwcmV2ZW50IG9sZGVyIHByb21pc2VzIHRvIHJlc29sdmUgYWZ0ZXIgYSBuZXdlciBwcm9taXNlLFxuICogb3RoZXJ3aXNlIHJlc3VsdGluZyBpbiBzdGFsZSByZXNvbHZlZCB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25jdXJyZW50U2FmZVByb21pc2UoKSB7XG4gIHZhciBiYXNlUHJvbWlzZUlkID0gLTE7XG4gIHZhciBsYXRlc3RSZXNvbHZlZElkID0gLTE7XG4gIHZhciBsYXRlc3RSZXNvbHZlZFZhbHVlID0gdW5kZWZpbmVkO1xuICByZXR1cm4gZnVuY3Rpb24gcnVuQ29uY3VycmVudFNhZmVQcm9taXNlKHByb21pc2UpIHtcbiAgICBiYXNlUHJvbWlzZUlkKys7XG4gICAgdmFyIGN1cnJlbnRQcm9taXNlSWQgPSBiYXNlUHJvbWlzZUlkO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocHJvbWlzZSkudGhlbihmdW5jdGlvbiAoeCkge1xuICAgICAgLy8gVGhlIHByb21pc2UgbWlnaHQgdGFrZSB0b28gbG9uZyB0byByZXNvbHZlIGFuZCBnZXQgb3V0ZGF0ZWQuIFRoaXMgd291bGRcbiAgICAgIC8vIHJlc3VsdCBpbiByZXNvbHZpbmcgc3RhbGUgdmFsdWVzLlxuICAgICAgLy8gV2hlbiB0aGlzIGhhcHBlbnMsIHdlIGlnbm9yZSB0aGUgcHJvbWlzZSB2YWx1ZSBhbmQgcmV0dXJuIHRoZSBvbmVcbiAgICAgIC8vIGNvbWluZyBmcm9tIHRoZSBsYXRlc3QgcmVzb2x2ZWQgdmFsdWUuXG4gICAgICAvL1xuICAgICAgLy8gKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXG4gICAgICAvLyB8ICAgICAgICAxMDBtcyAgICAgICAgICAgICAgICAgICAgIHxcbiAgICAgIC8vIHwgcnVuKDEpICstLS0+ICBSMSAgICAgICAgICAgICAgICAgfFxuICAgICAgLy8gfCAgICAgICAgMzAwbXMgICAgICAgICAgICAgICAgICAgICB8XG4gICAgICAvLyB8IHJ1bigyKSArLS0tLS0tLS0tLS0tLT4gUjIgKFNLSVApIHxcbiAgICAgIC8vIHwgICAgICAgIDIwMG1zICAgICAgICAgICAgICAgICAgICAgfFxuICAgICAgLy8gfCBydW4oMykgKy0tLS0tLS0tPiBSMyAgICAgICAgICAgICB8XG4gICAgICAvLyArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcbiAgICAgIGlmIChsYXRlc3RSZXNvbHZlZFZhbHVlICYmIGN1cnJlbnRQcm9taXNlSWQgPCBsYXRlc3RSZXNvbHZlZElkKSB7XG4gICAgICAgIHJldHVybiBsYXRlc3RSZXNvbHZlZFZhbHVlO1xuICAgICAgfVxuICAgICAgbGF0ZXN0UmVzb2x2ZWRJZCA9IGN1cnJlbnRQcm9taXNlSWQ7XG4gICAgICBsYXRlc3RSZXNvbHZlZFZhbHVlID0geDtcbiAgICAgIHJldHVybiB4O1xuICAgIH0pO1xuICB9O1xufSJdLCJuYW1lcyI6WyJjcmVhdGVDb25jdXJyZW50U2FmZVByb21pc2UiLCJiYXNlUHJvbWlzZUlkIiwibGF0ZXN0UmVzb2x2ZWRJZCIsImxhdGVzdFJlc29sdmVkVmFsdWUiLCJ1bmRlZmluZWQiLCJydW5Db25jdXJyZW50U2FmZVByb21pc2UiLCJwcm9taXNlIiwiY3VycmVudFByb21pc2VJZCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIngiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/createConcurrentSafePromise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getActiveItem.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/getActiveItem.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getActiveItem: () => (/* binding */ getActiveItem)\n/* harmony export */ });\n// We don't have access to the autocomplete source when we call `onKeyDown`\n// or `onClick` because those are native browser events.\n// However, we can get the source from the suggestion index.\nfunction getCollectionFromActiveItemId(state) {\n    // Given 3 sources with respectively 1, 2 and 3 suggestions: [1, 2, 3]\n    // We want to get the accumulated counts:\n    // [1, 1 + 2, 1 + 2 + 3] = [1, 3, 3 + 3] = [1, 3, 6]\n    var accumulatedCollectionsCount = state.collections.map(function(collections) {\n        return collections.items.length;\n    }).reduce(function(acc, collectionsCount, index) {\n        var previousValue = acc[index - 1] || 0;\n        var nextValue = previousValue + collectionsCount;\n        acc.push(nextValue);\n        return acc;\n    }, []);\n    // Based on the accumulated counts, we can infer the index of the suggestion.\n    var collectionIndex = accumulatedCollectionsCount.reduce(function(acc, current) {\n        if (current <= state.activeItemId) {\n            return acc + 1;\n        }\n        return acc;\n    }, 0);\n    return state.collections[collectionIndex];\n}\n/**\n * Gets the highlighted index relative to a suggestion object (not the absolute\n * highlighted index).\n *\n * Example:\n *  [['a', 'b'], ['c', 'd', 'e'], ['f']]\n *                      ↑\n *         (absolute: 3, relative: 1)\n */ function getRelativeActiveItemId(_ref) {\n    var state = _ref.state, collection = _ref.collection;\n    var isOffsetFound = false;\n    var counter = 0;\n    var previousItemsOffset = 0;\n    while(isOffsetFound === false){\n        var currentCollection = state.collections[counter];\n        if (currentCollection === collection) {\n            isOffsetFound = true;\n            break;\n        }\n        previousItemsOffset += currentCollection.items.length;\n        counter++;\n    }\n    return state.activeItemId - previousItemsOffset;\n}\nfunction getActiveItem(state) {\n    var collection = getCollectionFromActiveItemId(state);\n    if (!collection) {\n        return null;\n    }\n    var item = collection.items[getRelativeActiveItemId({\n        state: state,\n        collection: collection\n    })];\n    var source = collection.source;\n    var itemInputValue = source.getItemInputValue({\n        item: item,\n        state: state\n    });\n    var itemUrl = source.getItemUrl({\n        item: item,\n        state: state\n    });\n    return {\n        item: item,\n        itemInputValue: itemInputValue,\n        itemUrl: itemUrl,\n        source: source\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvZ2V0QWN0aXZlSXRlbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMkVBQTJFO0FBQzNFLHdEQUF3RDtBQUN4RCw0REFBNEQ7QUFDNUQsU0FBU0EsOEJBQThCQyxLQUFLO0lBQzFDLHNFQUFzRTtJQUN0RSx5Q0FBeUM7SUFDekMsb0RBQW9EO0lBQ3BELElBQUlDLDhCQUE4QkQsTUFBTUUsV0FBVyxDQUFDQyxHQUFHLENBQUMsU0FBVUQsV0FBVztRQUMzRSxPQUFPQSxZQUFZRSxLQUFLLENBQUNDLE1BQU07SUFDakMsR0FBR0MsTUFBTSxDQUFDLFNBQVVDLEdBQUcsRUFBRUMsZ0JBQWdCLEVBQUVDLEtBQUs7UUFDOUMsSUFBSUMsZ0JBQWdCSCxHQUFHLENBQUNFLFFBQVEsRUFBRSxJQUFJO1FBQ3RDLElBQUlFLFlBQVlELGdCQUFnQkY7UUFDaENELElBQUlLLElBQUksQ0FBQ0Q7UUFDVCxPQUFPSjtJQUNULEdBQUcsRUFBRTtJQUVMLDZFQUE2RTtJQUM3RSxJQUFJTSxrQkFBa0JaLDRCQUE0QkssTUFBTSxDQUFDLFNBQVVDLEdBQUcsRUFBRU8sT0FBTztRQUM3RSxJQUFJQSxXQUFXZCxNQUFNZSxZQUFZLEVBQUU7WUFDakMsT0FBT1IsTUFBTTtRQUNmO1FBQ0EsT0FBT0E7SUFDVCxHQUFHO0lBQ0gsT0FBT1AsTUFBTUUsV0FBVyxDQUFDVyxnQkFBZ0I7QUFDM0M7QUFFQTs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNHLHdCQUF3QkMsSUFBSTtJQUNuQyxJQUFJakIsUUFBUWlCLEtBQUtqQixLQUFLLEVBQ3BCa0IsYUFBYUQsS0FBS0MsVUFBVTtJQUM5QixJQUFJQyxnQkFBZ0I7SUFDcEIsSUFBSUMsVUFBVTtJQUNkLElBQUlDLHNCQUFzQjtJQUMxQixNQUFPRixrQkFBa0IsTUFBTztRQUM5QixJQUFJRyxvQkFBb0J0QixNQUFNRSxXQUFXLENBQUNrQixRQUFRO1FBQ2xELElBQUlFLHNCQUFzQkosWUFBWTtZQUNwQ0MsZ0JBQWdCO1lBQ2hCO1FBQ0Y7UUFDQUUsdUJBQXVCQyxrQkFBa0JsQixLQUFLLENBQUNDLE1BQU07UUFDckRlO0lBQ0Y7SUFDQSxPQUFPcEIsTUFBTWUsWUFBWSxHQUFHTTtBQUM5QjtBQUNPLFNBQVNFLGNBQWN2QixLQUFLO0lBQ2pDLElBQUlrQixhQUFhbkIsOEJBQThCQztJQUMvQyxJQUFJLENBQUNrQixZQUFZO1FBQ2YsT0FBTztJQUNUO0lBQ0EsSUFBSU0sT0FBT04sV0FBV2QsS0FBSyxDQUFDWSx3QkFBd0I7UUFDbERoQixPQUFPQTtRQUNQa0IsWUFBWUE7SUFDZCxHQUFHO0lBQ0gsSUFBSU8sU0FBU1AsV0FBV08sTUFBTTtJQUM5QixJQUFJQyxpQkFBaUJELE9BQU9FLGlCQUFpQixDQUFDO1FBQzVDSCxNQUFNQTtRQUNOeEIsT0FBT0E7SUFDVDtJQUNBLElBQUk0QixVQUFVSCxPQUFPSSxVQUFVLENBQUM7UUFDOUJMLE1BQU1BO1FBQ054QixPQUFPQTtJQUNUO0lBQ0EsT0FBTztRQUNMd0IsTUFBTUE7UUFDTkUsZ0JBQWdCQTtRQUNoQkUsU0FBU0E7UUFDVEgsUUFBUUE7SUFDVjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvZ2V0QWN0aXZlSXRlbS5qcz9kZjA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFdlIGRvbid0IGhhdmUgYWNjZXNzIHRvIHRoZSBhdXRvY29tcGxldGUgc291cmNlIHdoZW4gd2UgY2FsbCBgb25LZXlEb3duYFxuLy8gb3IgYG9uQ2xpY2tgIGJlY2F1c2UgdGhvc2UgYXJlIG5hdGl2ZSBicm93c2VyIGV2ZW50cy5cbi8vIEhvd2V2ZXIsIHdlIGNhbiBnZXQgdGhlIHNvdXJjZSBmcm9tIHRoZSBzdWdnZXN0aW9uIGluZGV4LlxuZnVuY3Rpb24gZ2V0Q29sbGVjdGlvbkZyb21BY3RpdmVJdGVtSWQoc3RhdGUpIHtcbiAgLy8gR2l2ZW4gMyBzb3VyY2VzIHdpdGggcmVzcGVjdGl2ZWx5IDEsIDIgYW5kIDMgc3VnZ2VzdGlvbnM6IFsxLCAyLCAzXVxuICAvLyBXZSB3YW50IHRvIGdldCB0aGUgYWNjdW11bGF0ZWQgY291bnRzOlxuICAvLyBbMSwgMSArIDIsIDEgKyAyICsgM10gPSBbMSwgMywgMyArIDNdID0gWzEsIDMsIDZdXG4gIHZhciBhY2N1bXVsYXRlZENvbGxlY3Rpb25zQ291bnQgPSBzdGF0ZS5jb2xsZWN0aW9ucy5tYXAoZnVuY3Rpb24gKGNvbGxlY3Rpb25zKSB7XG4gICAgcmV0dXJuIGNvbGxlY3Rpb25zLml0ZW1zLmxlbmd0aDtcbiAgfSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGNvbGxlY3Rpb25zQ291bnQsIGluZGV4KSB7XG4gICAgdmFyIHByZXZpb3VzVmFsdWUgPSBhY2NbaW5kZXggLSAxXSB8fCAwO1xuICAgIHZhciBuZXh0VmFsdWUgPSBwcmV2aW91c1ZhbHVlICsgY29sbGVjdGlvbnNDb3VudDtcbiAgICBhY2MucHVzaChuZXh0VmFsdWUpO1xuICAgIHJldHVybiBhY2M7XG4gIH0sIFtdKTtcblxuICAvLyBCYXNlZCBvbiB0aGUgYWNjdW11bGF0ZWQgY291bnRzLCB3ZSBjYW4gaW5mZXIgdGhlIGluZGV4IG9mIHRoZSBzdWdnZXN0aW9uLlxuICB2YXIgY29sbGVjdGlvbkluZGV4ID0gYWNjdW11bGF0ZWRDb2xsZWN0aW9uc0NvdW50LnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXJyZW50KSB7XG4gICAgaWYgKGN1cnJlbnQgPD0gc3RhdGUuYWN0aXZlSXRlbUlkKSB7XG4gICAgICByZXR1cm4gYWNjICsgMTtcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbiAgfSwgMCk7XG4gIHJldHVybiBzdGF0ZS5jb2xsZWN0aW9uc1tjb2xsZWN0aW9uSW5kZXhdO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGhpZ2hsaWdodGVkIGluZGV4IHJlbGF0aXZlIHRvIGEgc3VnZ2VzdGlvbiBvYmplY3QgKG5vdCB0aGUgYWJzb2x1dGVcbiAqIGhpZ2hsaWdodGVkIGluZGV4KS5cbiAqXG4gKiBFeGFtcGxlOlxuICogIFtbJ2EnLCAnYiddLCBbJ2MnLCAnZCcsICdlJ10sIFsnZiddXVxuICogICAgICAgICAgICAgICAgICAgICAg4oaRXG4gKiAgICAgICAgIChhYnNvbHV0ZTogMywgcmVsYXRpdmU6IDEpXG4gKi9cbmZ1bmN0aW9uIGdldFJlbGF0aXZlQWN0aXZlSXRlbUlkKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICBjb2xsZWN0aW9uID0gX3JlZi5jb2xsZWN0aW9uO1xuICB2YXIgaXNPZmZzZXRGb3VuZCA9IGZhbHNlO1xuICB2YXIgY291bnRlciA9IDA7XG4gIHZhciBwcmV2aW91c0l0ZW1zT2Zmc2V0ID0gMDtcbiAgd2hpbGUgKGlzT2Zmc2V0Rm91bmQgPT09IGZhbHNlKSB7XG4gICAgdmFyIGN1cnJlbnRDb2xsZWN0aW9uID0gc3RhdGUuY29sbGVjdGlvbnNbY291bnRlcl07XG4gICAgaWYgKGN1cnJlbnRDb2xsZWN0aW9uID09PSBjb2xsZWN0aW9uKSB7XG4gICAgICBpc09mZnNldEZvdW5kID0gdHJ1ZTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBwcmV2aW91c0l0ZW1zT2Zmc2V0ICs9IGN1cnJlbnRDb2xsZWN0aW9uLml0ZW1zLmxlbmd0aDtcbiAgICBjb3VudGVyKys7XG4gIH1cbiAgcmV0dXJuIHN0YXRlLmFjdGl2ZUl0ZW1JZCAtIHByZXZpb3VzSXRlbXNPZmZzZXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QWN0aXZlSXRlbShzdGF0ZSkge1xuICB2YXIgY29sbGVjdGlvbiA9IGdldENvbGxlY3Rpb25Gcm9tQWN0aXZlSXRlbUlkKHN0YXRlKTtcbiAgaWYgKCFjb2xsZWN0aW9uKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdmFyIGl0ZW0gPSBjb2xsZWN0aW9uLml0ZW1zW2dldFJlbGF0aXZlQWN0aXZlSXRlbUlkKHtcbiAgICBzdGF0ZTogc3RhdGUsXG4gICAgY29sbGVjdGlvbjogY29sbGVjdGlvblxuICB9KV07XG4gIHZhciBzb3VyY2UgPSBjb2xsZWN0aW9uLnNvdXJjZTtcbiAgdmFyIGl0ZW1JbnB1dFZhbHVlID0gc291cmNlLmdldEl0ZW1JbnB1dFZhbHVlKHtcbiAgICBpdGVtOiBpdGVtLFxuICAgIHN0YXRlOiBzdGF0ZVxuICB9KTtcbiAgdmFyIGl0ZW1VcmwgPSBzb3VyY2UuZ2V0SXRlbVVybCh7XG4gICAgaXRlbTogaXRlbSxcbiAgICBzdGF0ZTogc3RhdGVcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgaXRlbTogaXRlbSxcbiAgICBpdGVtSW5wdXRWYWx1ZTogaXRlbUlucHV0VmFsdWUsXG4gICAgaXRlbVVybDogaXRlbVVybCxcbiAgICBzb3VyY2U6IHNvdXJjZVxuICB9O1xufSJdLCJuYW1lcyI6WyJnZXRDb2xsZWN0aW9uRnJvbUFjdGl2ZUl0ZW1JZCIsInN0YXRlIiwiYWNjdW11bGF0ZWRDb2xsZWN0aW9uc0NvdW50IiwiY29sbGVjdGlvbnMiLCJtYXAiLCJpdGVtcyIsImxlbmd0aCIsInJlZHVjZSIsImFjYyIsImNvbGxlY3Rpb25zQ291bnQiLCJpbmRleCIsInByZXZpb3VzVmFsdWUiLCJuZXh0VmFsdWUiLCJwdXNoIiwiY29sbGVjdGlvbkluZGV4IiwiY3VycmVudCIsImFjdGl2ZUl0ZW1JZCIsImdldFJlbGF0aXZlQWN0aXZlSXRlbUlkIiwiX3JlZiIsImNvbGxlY3Rpb24iLCJpc09mZnNldEZvdW5kIiwiY291bnRlciIsInByZXZpb3VzSXRlbXNPZmZzZXQiLCJjdXJyZW50Q29sbGVjdGlvbiIsImdldEFjdGl2ZUl0ZW0iLCJpdGVtIiwic291cmNlIiwiaXRlbUlucHV0VmFsdWUiLCJnZXRJdGVtSW5wdXRWYWx1ZSIsIml0ZW1VcmwiLCJnZXRJdGVtVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getActiveItem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNextActiveItemId.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNextActiveItemId.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextActiveItemId: () => (/* binding */ getNextActiveItemId)\n/* harmony export */ });\n/**\n * Returns the next active item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultActiveItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultActiveItemId The default active index to fallback to\n */ function getNextActiveItemId(moveAmount, baseIndex, itemCount, defaultActiveItemId) {\n    if (!itemCount) {\n        return null;\n    }\n    if (moveAmount < 0 && (baseIndex === null || defaultActiveItemId !== null && baseIndex === 0)) {\n        return itemCount + moveAmount;\n    }\n    var numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n    if (numericIndex <= -1 || numericIndex >= itemCount) {\n        return defaultActiveItemId === null ? null : 0;\n    }\n    return numericIndex;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvZ2V0TmV4dEFjdGl2ZUl0ZW1JZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBQ00sU0FBU0Esb0JBQW9CQyxVQUFVLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFQyxtQkFBbUI7SUFDdkYsSUFBSSxDQUFDRCxXQUFXO1FBQ2QsT0FBTztJQUNUO0lBQ0EsSUFBSUYsYUFBYSxLQUFNQyxDQUFBQSxjQUFjLFFBQVFFLHdCQUF3QixRQUFRRixjQUFjLElBQUk7UUFDN0YsT0FBT0MsWUFBWUY7SUFDckI7SUFDQSxJQUFJSSxlQUFlLENBQUNILGNBQWMsT0FBTyxDQUFDLElBQUlBLFNBQVEsSUFBS0Q7SUFDM0QsSUFBSUksZ0JBQWdCLENBQUMsS0FBS0EsZ0JBQWdCRixXQUFXO1FBQ25ELE9BQU9DLHdCQUF3QixPQUFPLE9BQU87SUFDL0M7SUFDQSxPQUFPQztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvZ2V0TmV4dEFjdGl2ZUl0ZW1JZC5qcz80NTdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0aGUgbmV4dCBhY3RpdmUgaXRlbSBJRCBmcm9tIHRoZSBjdXJyZW50IHN0YXRlLlxuICpcbiAqIFdlIGFsbG93IGNpcmN1bGFyIGtleWJvYXJkIG5hdmlnYXRpb24gZnJvbSB0aGUgYmFzZSBpbmRleC5cbiAqIFRoZSBiYXNlIGluZGV4IGNhbiBlaXRoZXIgYmUgYG51bGxgIChub3RoaW5nIGlzIGhpZ2hsaWdodGVkKSBvciBgMGBcbiAqICh0aGUgZmlyc3QgaXRlbSBpcyBoaWdobGlnaHRlZCkuXG4gKiBUaGUgYmFzZSBpbmRleCBpcyBhbGxvd2VkIHRvIGdldCBhc3NpZ25lZCBgbnVsbGAgb25seSBpZlxuICogYHByb3BzLmRlZmF1bHRBY3RpdmVJdGVtSWRgIGlzIGBudWxsYC4gVGhpcyBwYXR0ZXJuIGFsbG93cyB0byBcInN0b3BcIlxuICogYnkgdGhlIGFjdHVhbCBxdWVyeSBiZWZvcmUgbmF2aWdhdGluZyB0byBvdGhlciBzdWdnZXN0aW9ucyBhcyBzZWVuIG9uXG4gKiBHb29nbGUgb3IgQW1hem9uLlxuICpcbiAqIEBwYXJhbSBtb3ZlQW1vdW50IFRoZSBvZmZzZXQgdG8gaW5jcmVtZW50IChvciBkZWNyZW1lbnQpIHRoZSBsYXN0IGluZGV4XG4gKiBAcGFyYW0gYmFzZUluZGV4IFRoZSBjdXJyZW50IGluZGV4IHRvIGNvbXB1dGUgdGhlIG5leHQgaW5kZXggZnJvbVxuICogQHBhcmFtIGl0ZW1Db3VudCBUaGUgbnVtYmVyIG9mIGl0ZW1zXG4gKiBAcGFyYW0gZGVmYXVsdEFjdGl2ZUl0ZW1JZCBUaGUgZGVmYXVsdCBhY3RpdmUgaW5kZXggdG8gZmFsbGJhY2sgdG9cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5leHRBY3RpdmVJdGVtSWQobW92ZUFtb3VudCwgYmFzZUluZGV4LCBpdGVtQ291bnQsIGRlZmF1bHRBY3RpdmVJdGVtSWQpIHtcbiAgaWYgKCFpdGVtQ291bnQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBpZiAobW92ZUFtb3VudCA8IDAgJiYgKGJhc2VJbmRleCA9PT0gbnVsbCB8fCBkZWZhdWx0QWN0aXZlSXRlbUlkICE9PSBudWxsICYmIGJhc2VJbmRleCA9PT0gMCkpIHtcbiAgICByZXR1cm4gaXRlbUNvdW50ICsgbW92ZUFtb3VudDtcbiAgfVxuICB2YXIgbnVtZXJpY0luZGV4ID0gKGJhc2VJbmRleCA9PT0gbnVsbCA/IC0xIDogYmFzZUluZGV4KSArIG1vdmVBbW91bnQ7XG4gIGlmIChudW1lcmljSW5kZXggPD0gLTEgfHwgbnVtZXJpY0luZGV4ID49IGl0ZW1Db3VudCkge1xuICAgIHJldHVybiBkZWZhdWx0QWN0aXZlSXRlbUlkID09PSBudWxsID8gbnVsbCA6IDA7XG4gIH1cbiAgcmV0dXJuIG51bWVyaWNJbmRleDtcbn0iXSwibmFtZXMiOlsiZ2V0TmV4dEFjdGl2ZUl0ZW1JZCIsIm1vdmVBbW91bnQiLCJiYXNlSW5kZXgiLCJpdGVtQ291bnQiLCJkZWZhdWx0QWN0aXZlSXRlbUlkIiwibnVtZXJpY0luZGV4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNextActiveItemId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNormalizedSources.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNormalizedSources.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNormalizedSources: () => (/* binding */ getNormalizedSources)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/invariant.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/decycle.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/noop.js\");\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\n\nfunction getNormalizedSources(getSources, params) {\n    var seenSourceIds = [];\n    return Promise.resolve(getSources(params)).then(function(sources) {\n        (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.invariant)(Array.isArray(sources), function() {\n            return \"The `getSources` function must return an array of sources but returned type \".concat(JSON.stringify(_typeof(sources)), \":\\n\\n\").concat(JSON.stringify((0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_1__.decycle)(sources), null, 2));\n        });\n        return Promise.all(sources// We allow `undefined` and `false` sources to allow users to use\n        // `Boolean(query) && source` (=> `false`).\n        // We need to remove these values at this point.\n        .filter(function(maybeSource) {\n            return Boolean(maybeSource);\n        }).map(function(source) {\n            (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.invariant)(typeof source.sourceId === \"string\", \"A source must provide a `sourceId` string.\");\n            if (seenSourceIds.includes(source.sourceId)) {\n                throw new Error(\"[Autocomplete] The `sourceId` \".concat(JSON.stringify(source.sourceId), \" is not unique.\"));\n            }\n            seenSourceIds.push(source.sourceId);\n            var defaultSource = {\n                getItemInputValue: function getItemInputValue(_ref) {\n                    var state = _ref.state;\n                    return state.query;\n                },\n                getItemUrl: function getItemUrl() {\n                    return undefined;\n                },\n                onSelect: function onSelect(_ref2) {\n                    var setIsOpen = _ref2.setIsOpen;\n                    setIsOpen(false);\n                },\n                onActive: _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__.noop,\n                onResolve: _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__.noop\n            };\n            Object.keys(defaultSource).forEach(function(key) {\n                defaultSource[key].__default = true;\n            });\n            var normalizedSource = _objectSpread(_objectSpread({}, defaultSource), source);\n            return Promise.resolve(normalizedSource);\n        }));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvZ2V0Tm9ybWFsaXplZFNvdXJjZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLFNBQVNBLFFBQVFDLE1BQU0sRUFBRUMsY0FBYztJQUFJLElBQUlDLE9BQU9DLE9BQU9ELElBQUksQ0FBQ0Y7SUFBUyxJQUFJRyxPQUFPQyxxQkFBcUIsRUFBRTtRQUFFLElBQUlDLFVBQVVGLE9BQU9DLHFCQUFxQixDQUFDSjtRQUFTQyxrQkFBbUJJLENBQUFBLFVBQVVBLFFBQVFDLE1BQU0sQ0FBQyxTQUFVQyxHQUFHO1lBQUksT0FBT0osT0FBT0ssd0JBQXdCLENBQUNSLFFBQVFPLEtBQUtFLFVBQVU7UUFBRSxFQUFDLEdBQUlQLEtBQUtRLElBQUksQ0FBQ0MsS0FBSyxDQUFDVCxNQUFNRztJQUFVO0lBQUUsT0FBT0g7QUFBTTtBQUNwVixTQUFTVSxjQUFjQyxNQUFNO0lBQUksSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlDLFVBQVVDLE1BQU0sRUFBRUYsSUFBSztRQUFFLElBQUlHLFNBQVMsUUFBUUYsU0FBUyxDQUFDRCxFQUFFLEdBQUdDLFNBQVMsQ0FBQ0QsRUFBRSxHQUFHLENBQUM7UUFBR0EsSUFBSSxJQUFJZixRQUFRSSxPQUFPYyxTQUFTLENBQUMsR0FBR0MsT0FBTyxDQUFDLFNBQVVDLEdBQUc7WUFBSUMsZ0JBQWdCUCxRQUFRTSxLQUFLRixNQUFNLENBQUNFLElBQUk7UUFBRyxLQUFLaEIsT0FBT2tCLHlCQUF5QixHQUFHbEIsT0FBT21CLGdCQUFnQixDQUFDVCxRQUFRVixPQUFPa0IseUJBQXlCLENBQUNKLFdBQVdsQixRQUFRSSxPQUFPYyxTQUFTQyxPQUFPLENBQUMsU0FBVUMsR0FBRztZQUFJaEIsT0FBT29CLGNBQWMsQ0FBQ1YsUUFBUU0sS0FBS2hCLE9BQU9LLHdCQUF3QixDQUFDUyxRQUFRRTtRQUFPO0lBQUk7SUFBRSxPQUFPTjtBQUFRO0FBQ3pmLFNBQVNPLGdCQUFnQkksR0FBRyxFQUFFTCxHQUFHLEVBQUVNLEtBQUs7SUFBSU4sTUFBTU8sZUFBZVA7SUFBTSxJQUFJQSxPQUFPSyxLQUFLO1FBQUVyQixPQUFPb0IsY0FBYyxDQUFDQyxLQUFLTCxLQUFLO1lBQUVNLE9BQU9BO1lBQU9oQixZQUFZO1lBQU1rQixjQUFjO1lBQU1DLFVBQVU7UUFBSztJQUFJLE9BQU87UUFBRUosR0FBRyxDQUFDTCxJQUFJLEdBQUdNO0lBQU87SUFBRSxPQUFPRDtBQUFLO0FBQzNPLFNBQVNFLGVBQWVHLEdBQUc7SUFBSSxJQUFJVixNQUFNVyxhQUFhRCxLQUFLO0lBQVcsT0FBT0UsUUFBUVosU0FBUyxXQUFXQSxNQUFNYSxPQUFPYjtBQUFNO0FBQzVILFNBQVNXLGFBQWFHLEtBQUssRUFBRUMsSUFBSTtJQUFJLElBQUlILFFBQVFFLFdBQVcsWUFBWUEsVUFBVSxNQUFNLE9BQU9BO0lBQU8sSUFBSUUsT0FBT0YsS0FBSyxDQUFDRyxPQUFPQyxXQUFXLENBQUM7SUFBRSxJQUFJRixTQUFTRyxXQUFXO1FBQUUsSUFBSUMsTUFBTUosS0FBS0ssSUFBSSxDQUFDUCxPQUFPQyxRQUFRO1FBQVksSUFBSUgsUUFBUVEsU0FBUyxVQUFVLE9BQU9BO1FBQUssTUFBTSxJQUFJRSxVQUFVO0lBQWlEO0lBQUUsT0FBTyxDQUFDUCxTQUFTLFdBQVdGLFNBQVNVLE1BQUssRUFBR1Q7QUFBUTtBQUM1WCxTQUFTRixRQUFRUCxHQUFHO0lBQUk7SUFBMkIsT0FBT08sVUFBVSxjQUFjLE9BQU9LLFVBQVUsWUFBWSxPQUFPQSxPQUFPTyxRQUFRLEdBQUcsU0FBVW5CLEdBQUc7UUFBSSxPQUFPLE9BQU9BO0lBQUssSUFBSSxTQUFVQSxHQUFHO1FBQUksT0FBT0EsT0FBTyxjQUFjLE9BQU9ZLFVBQVVaLElBQUlvQixXQUFXLEtBQUtSLFVBQVVaLFFBQVFZLE9BQU9TLFNBQVMsR0FBRyxXQUFXLE9BQU9yQjtJQUFLLEdBQUdPLFFBQVFQO0FBQU07QUFDdlE7QUFDakUsU0FBU3lCLHFCQUFxQkMsVUFBVSxFQUFFQyxNQUFNO0lBQ3JELElBQUlDLGdCQUFnQixFQUFFO0lBQ3RCLE9BQU9DLFFBQVFDLE9BQU8sQ0FBQ0osV0FBV0MsU0FBU0ksSUFBSSxDQUFDLFNBQVVDLE9BQU87UUFDL0RWLHVFQUFTQSxDQUFDVyxNQUFNQyxPQUFPLENBQUNGLFVBQVU7WUFDaEMsT0FBTywrRUFBK0VHLE1BQU0sQ0FBQ0MsS0FBS0MsU0FBUyxDQUFDOUIsUUFBUXlCLFdBQVcsU0FBU0csTUFBTSxDQUFDQyxLQUFLQyxTQUFTLENBQUNkLHFFQUFPQSxDQUFDUyxVQUFVLE1BQU07UUFDeEw7UUFDQSxPQUFPSCxRQUFRUyxHQUFHLENBQUNOLE9BQ25CLGlFQUFpRTtRQUNqRSwyQ0FBMkM7UUFDM0MsZ0RBQWdEO1NBQy9DbEQsTUFBTSxDQUFDLFNBQVV5RCxXQUFXO1lBQzNCLE9BQU9DLFFBQVFEO1FBQ2pCLEdBQUdFLEdBQUcsQ0FBQyxTQUFVaEQsTUFBTTtZQUNyQjZCLHVFQUFTQSxDQUFDLE9BQU83QixPQUFPaUQsUUFBUSxLQUFLLFVBQVU7WUFDL0MsSUFBSWQsY0FBY2UsUUFBUSxDQUFDbEQsT0FBT2lELFFBQVEsR0FBRztnQkFDM0MsTUFBTSxJQUFJRSxNQUFNLGlDQUFpQ1QsTUFBTSxDQUFDQyxLQUFLQyxTQUFTLENBQUM1QyxPQUFPaUQsUUFBUSxHQUFHO1lBQzNGO1lBQ0FkLGNBQWMxQyxJQUFJLENBQUNPLE9BQU9pRCxRQUFRO1lBQ2xDLElBQUlHLGdCQUFnQjtnQkFDbEJDLG1CQUFtQixTQUFTQSxrQkFBa0JDLElBQUk7b0JBQ2hELElBQUlDLFFBQVFELEtBQUtDLEtBQUs7b0JBQ3RCLE9BQU9BLE1BQU1DLEtBQUs7Z0JBQ3BCO2dCQUNBQyxZQUFZLFNBQVNBO29CQUNuQixPQUFPcEM7Z0JBQ1Q7Z0JBQ0FxQyxVQUFVLFNBQVNBLFNBQVNDLEtBQUs7b0JBQy9CLElBQUlDLFlBQVlELE1BQU1DLFNBQVM7b0JBQy9CQSxVQUFVO2dCQUNaO2dCQUNBQyxVQUFVOUIsOERBQUlBO2dCQUNkK0IsV0FBVy9CLDhEQUFJQTtZQUNqQjtZQUNBN0MsT0FBT0QsSUFBSSxDQUFDbUUsZUFBZW5ELE9BQU8sQ0FBQyxTQUFVQyxHQUFHO2dCQUM5Q2tELGFBQWEsQ0FBQ2xELElBQUksQ0FBQzZELFNBQVMsR0FBRztZQUNqQztZQUNBLElBQUlDLG1CQUFtQnJFLGNBQWNBLGNBQWMsQ0FBQyxHQUFHeUQsZ0JBQWdCcEQ7WUFDdkUsT0FBT29DLFFBQVFDLE9BQU8sQ0FBQzJCO1FBQ3pCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1jb3JlL2Rpc3QvZXNtL3V0aWxzL2dldE5vcm1hbGl6ZWRTb3VyY2VzLmpzPzAwZjMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGtleSA9IF90b1Byb3BlcnR5S2V5KGtleSk7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkoYXJnKSB7IHZhciBrZXkgPSBfdG9QcmltaXRpdmUoYXJnLCBcInN0cmluZ1wiKTsgcmV0dXJuIF90eXBlb2Yoa2V5KSA9PT0gXCJzeW1ib2xcIiA/IGtleSA6IFN0cmluZyhrZXkpOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUoaW5wdXQsIGhpbnQpIHsgaWYgKF90eXBlb2YoaW5wdXQpICE9PSBcIm9iamVjdFwiIHx8IGlucHV0ID09PSBudWxsKSByZXR1cm4gaW5wdXQ7IHZhciBwcmltID0gaW5wdXRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHByaW0gIT09IHVuZGVmaW5lZCkgeyB2YXIgcmVzID0gcHJpbS5jYWxsKGlucHV0LCBoaW50IHx8IFwiZGVmYXVsdFwiKTsgaWYgKF90eXBlb2YocmVzKSAhPT0gXCJvYmplY3RcIikgcmV0dXJuIHJlczsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoaGludCA9PT0gXCJzdHJpbmdcIiA/IFN0cmluZyA6IE51bWJlcikoaW5wdXQpOyB9XG5mdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfSwgX3R5cGVvZihvYmopOyB9XG5pbXBvcnQgeyBpbnZhcmlhbnQsIGRlY3ljbGUsIG5vb3AgfSBmcm9tICdAYWxnb2xpYS9hdXRvY29tcGxldGUtc2hhcmVkJztcbmV4cG9ydCBmdW5jdGlvbiBnZXROb3JtYWxpemVkU291cmNlcyhnZXRTb3VyY2VzLCBwYXJhbXMpIHtcbiAgdmFyIHNlZW5Tb3VyY2VJZHMgPSBbXTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShnZXRTb3VyY2VzKHBhcmFtcykpLnRoZW4oZnVuY3Rpb24gKHNvdXJjZXMpIHtcbiAgICBpbnZhcmlhbnQoQXJyYXkuaXNBcnJheShzb3VyY2VzKSwgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIFwiVGhlIGBnZXRTb3VyY2VzYCBmdW5jdGlvbiBtdXN0IHJldHVybiBhbiBhcnJheSBvZiBzb3VyY2VzIGJ1dCByZXR1cm5lZCB0eXBlIFwiLmNvbmNhdChKU09OLnN0cmluZ2lmeShfdHlwZW9mKHNvdXJjZXMpKSwgXCI6XFxuXFxuXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShkZWN5Y2xlKHNvdXJjZXMpLCBudWxsLCAyKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHNvdXJjZXNcbiAgICAvLyBXZSBhbGxvdyBgdW5kZWZpbmVkYCBhbmQgYGZhbHNlYCBzb3VyY2VzIHRvIGFsbG93IHVzZXJzIHRvIHVzZVxuICAgIC8vIGBCb29sZWFuKHF1ZXJ5KSAmJiBzb3VyY2VgICg9PiBgZmFsc2VgKS5cbiAgICAvLyBXZSBuZWVkIHRvIHJlbW92ZSB0aGVzZSB2YWx1ZXMgYXQgdGhpcyBwb2ludC5cbiAgICAuZmlsdGVyKGZ1bmN0aW9uIChtYXliZVNvdXJjZSkge1xuICAgICAgcmV0dXJuIEJvb2xlYW4obWF5YmVTb3VyY2UpO1xuICAgIH0pLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICBpbnZhcmlhbnQodHlwZW9mIHNvdXJjZS5zb3VyY2VJZCA9PT0gJ3N0cmluZycsICdBIHNvdXJjZSBtdXN0IHByb3ZpZGUgYSBgc291cmNlSWRgIHN0cmluZy4nKTtcbiAgICAgIGlmIChzZWVuU291cmNlSWRzLmluY2x1ZGVzKHNvdXJjZS5zb3VyY2VJZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiW0F1dG9jb21wbGV0ZV0gVGhlIGBzb3VyY2VJZGAgXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHNvdXJjZS5zb3VyY2VJZCksIFwiIGlzIG5vdCB1bmlxdWUuXCIpKTtcbiAgICAgIH1cbiAgICAgIHNlZW5Tb3VyY2VJZHMucHVzaChzb3VyY2Uuc291cmNlSWQpO1xuICAgICAgdmFyIGRlZmF1bHRTb3VyY2UgPSB7XG4gICAgICAgIGdldEl0ZW1JbnB1dFZhbHVlOiBmdW5jdGlvbiBnZXRJdGVtSW5wdXRWYWx1ZShfcmVmKSB7XG4gICAgICAgICAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZTtcbiAgICAgICAgICByZXR1cm4gc3RhdGUucXVlcnk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldEl0ZW1Vcmw6IGZ1bmN0aW9uIGdldEl0ZW1VcmwoKSB7XG4gICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgb25TZWxlY3Q6IGZ1bmN0aW9uIG9uU2VsZWN0KF9yZWYyKSB7XG4gICAgICAgICAgdmFyIHNldElzT3BlbiA9IF9yZWYyLnNldElzT3BlbjtcbiAgICAgICAgICBzZXRJc09wZW4oZmFsc2UpO1xuICAgICAgICB9LFxuICAgICAgICBvbkFjdGl2ZTogbm9vcCxcbiAgICAgICAgb25SZXNvbHZlOiBub29wXG4gICAgICB9O1xuICAgICAgT2JqZWN0LmtleXMoZGVmYXVsdFNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGRlZmF1bHRTb3VyY2Vba2V5XS5fX2RlZmF1bHQgPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICB2YXIgbm9ybWFsaXplZFNvdXJjZSA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdFNvdXJjZSksIHNvdXJjZSk7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5vcm1hbGl6ZWRTb3VyY2UpO1xuICAgIH0pKTtcbiAgfSk7XG59Il0sIm5hbWVzIjpbIm93bktleXMiLCJvYmplY3QiLCJlbnVtZXJhYmxlT25seSIsImtleXMiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzeW1ib2xzIiwiZmlsdGVyIiwic3ltIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwiZm9yRWFjaCIsImtleSIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJfdHlwZW9mIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIk51bWJlciIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJpbnZhcmlhbnQiLCJkZWN5Y2xlIiwibm9vcCIsImdldE5vcm1hbGl6ZWRTb3VyY2VzIiwiZ2V0U291cmNlcyIsInBhcmFtcyIsInNlZW5Tb3VyY2VJZHMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJzb3VyY2VzIiwiQXJyYXkiLCJpc0FycmF5IiwiY29uY2F0IiwiSlNPTiIsInN0cmluZ2lmeSIsImFsbCIsIm1heWJlU291cmNlIiwiQm9vbGVhbiIsIm1hcCIsInNvdXJjZUlkIiwiaW5jbHVkZXMiLCJFcnJvciIsImRlZmF1bHRTb3VyY2UiLCJnZXRJdGVtSW5wdXRWYWx1ZSIsIl9yZWYiLCJzdGF0ZSIsInF1ZXJ5IiwiZ2V0SXRlbVVybCIsIm9uU2VsZWN0IiwiX3JlZjIiLCJzZXRJc09wZW4iLCJvbkFjdGl2ZSIsIm9uUmVzb2x2ZSIsIl9fZGVmYXVsdCIsIm5vcm1hbGl6ZWRTb3VyY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/getNormalizedSources.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/isOrContainsNode.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/isOrContainsNode.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isOrContainsNode: () => (/* binding */ isOrContainsNode)\n/* harmony export */ });\nfunction isOrContainsNode(parent, child) {\n    return parent === child || parent.contains(child);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvaXNPckNvbnRhaW5zTm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsaUJBQWlCQyxNQUFNLEVBQUVDLEtBQUs7SUFDNUMsT0FBT0QsV0FBV0MsU0FBU0QsT0FBT0UsUUFBUSxDQUFDRDtBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1jb3JlL2Rpc3QvZXNtL3V0aWxzL2lzT3JDb250YWluc05vZGUuanM/OTIxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNPckNvbnRhaW5zTm9kZShwYXJlbnQsIGNoaWxkKSB7XG4gIHJldHVybiBwYXJlbnQgPT09IGNoaWxkIHx8IHBhcmVudC5jb250YWlucyhjaGlsZCk7XG59Il0sIm5hbWVzIjpbImlzT3JDb250YWluc05vZGUiLCJwYXJlbnQiLCJjaGlsZCIsImNvbnRhaW5zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/isOrContainsNode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/isSamsung.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/isSamsung.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSamsung: () => (/* binding */ isSamsung)\n/* harmony export */ });\nvar regex = /((gt|sm)-|galaxy nexus)|samsung[- ]|samsungbrowser/i;\nfunction isSamsung(userAgent) {\n    return Boolean(userAgent && userAgent.match(regex));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvaXNTYW1zdW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFJQSxRQUFRO0FBQ0wsU0FBU0MsVUFBVUMsU0FBUztJQUNqQyxPQUFPQyxRQUFRRCxhQUFhQSxVQUFVRSxLQUFLLENBQUNKO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvaXNTYW1zdW5nLmpzPzFhMDkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlZ2V4ID0gLygoZ3R8c20pLXxnYWxheHkgbmV4dXMpfHNhbXN1bmdbLSBdfHNhbXN1bmdicm93c2VyL2k7XG5leHBvcnQgZnVuY3Rpb24gaXNTYW1zdW5nKHVzZXJBZ2VudCkge1xuICByZXR1cm4gQm9vbGVhbih1c2VyQWdlbnQgJiYgdXNlckFnZW50Lm1hdGNoKHJlZ2V4KSk7XG59Il0sIm5hbWVzIjpbInJlZ2V4IiwiaXNTYW1zdW5nIiwidXNlckFnZW50IiwiQm9vbGVhbiIsIm1hdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/isSamsung.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/mapToAlgoliaResponse.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-core/dist/esm/utils/mapToAlgoliaResponse.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapToAlgoliaResponse: () => (/* binding */ mapToAlgoliaResponse)\n/* harmony export */ });\nfunction mapToAlgoliaResponse(rawResults) {\n    return {\n        results: rawResults,\n        hits: rawResults.map(function(result) {\n            return result.hits;\n        }).filter(Boolean),\n        facetHits: rawResults.map(function(result) {\n            var _facetHits;\n            return (_facetHits = result.facetHits) === null || _facetHits === void 0 ? void 0 : _facetHits.map(function(facetHit) {\n                // Bring support for the highlighting components.\n                return {\n                    label: facetHit.value,\n                    count: facetHit.count,\n                    _highlightResult: {\n                        label: {\n                            value: facetHit.highlighted\n                        }\n                    }\n                };\n            });\n        }).filter(Boolean)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLWNvcmUvZGlzdC9lc20vdXRpbHMvbWFwVG9BbGdvbGlhUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLHFCQUFxQkMsVUFBVTtJQUM3QyxPQUFPO1FBQ0xDLFNBQVNEO1FBQ1RFLE1BQU1GLFdBQVdHLEdBQUcsQ0FBQyxTQUFVQyxNQUFNO1lBQ25DLE9BQU9BLE9BQU9GLElBQUk7UUFDcEIsR0FBR0csTUFBTSxDQUFDQztRQUNWQyxXQUFXUCxXQUFXRyxHQUFHLENBQUMsU0FBVUMsTUFBTTtZQUN4QyxJQUFJSTtZQUNKLE9BQU8sQ0FBQ0EsYUFBYUosT0FBT0csU0FBUyxNQUFNLFFBQVFDLGVBQWUsS0FBSyxJQUFJLEtBQUssSUFBSUEsV0FBV0wsR0FBRyxDQUFDLFNBQVVNLFFBQVE7Z0JBQ25ILGlEQUFpRDtnQkFDakQsT0FBTztvQkFDTEMsT0FBT0QsU0FBU0UsS0FBSztvQkFDckJDLE9BQU9ILFNBQVNHLEtBQUs7b0JBQ3JCQyxrQkFBa0I7d0JBQ2hCSCxPQUFPOzRCQUNMQyxPQUFPRixTQUFTSyxXQUFXO3dCQUM3QjtvQkFDRjtnQkFDRjtZQUNGO1FBQ0YsR0FBR1QsTUFBTSxDQUFDQztJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG93Yml0ZS1yZWFjdC8uL25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtY29yZS9kaXN0L2VzbS91dGlscy9tYXBUb0FsZ29saWFSZXNwb25zZS5qcz8xODk2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBtYXBUb0FsZ29saWFSZXNwb25zZShyYXdSZXN1bHRzKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdWx0czogcmF3UmVzdWx0cyxcbiAgICBoaXRzOiByYXdSZXN1bHRzLm1hcChmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICByZXR1cm4gcmVzdWx0LmhpdHM7XG4gICAgfSkuZmlsdGVyKEJvb2xlYW4pLFxuICAgIGZhY2V0SGl0czogcmF3UmVzdWx0cy5tYXAoZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgdmFyIF9mYWNldEhpdHM7XG4gICAgICByZXR1cm4gKF9mYWNldEhpdHMgPSByZXN1bHQuZmFjZXRIaXRzKSA9PT0gbnVsbCB8fCBfZmFjZXRIaXRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZmFjZXRIaXRzLm1hcChmdW5jdGlvbiAoZmFjZXRIaXQpIHtcbiAgICAgICAgLy8gQnJpbmcgc3VwcG9ydCBmb3IgdGhlIGhpZ2hsaWdodGluZyBjb21wb25lbnRzLlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGxhYmVsOiBmYWNldEhpdC52YWx1ZSxcbiAgICAgICAgICBjb3VudDogZmFjZXRIaXQuY291bnQsXG4gICAgICAgICAgX2hpZ2hsaWdodFJlc3VsdDoge1xuICAgICAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgICAgdmFsdWU6IGZhY2V0SGl0LmhpZ2hsaWdodGVkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfSkuZmlsdGVyKEJvb2xlYW4pXG4gIH07XG59Il0sIm5hbWVzIjpbIm1hcFRvQWxnb2xpYVJlc3BvbnNlIiwicmF3UmVzdWx0cyIsInJlc3VsdHMiLCJoaXRzIiwibWFwIiwicmVzdWx0IiwiZmlsdGVyIiwiQm9vbGVhbiIsImZhY2V0SGl0cyIsIl9mYWNldEhpdHMiLCJmYWNldEhpdCIsImxhYmVsIiwidmFsdWUiLCJjb3VudCIsIl9oaWdobGlnaHRSZXN1bHQiLCJoaWdobGlnaHRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-core/dist/esm/utils/mapToAlgoliaResponse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAlgoliaInsightsPlugin: () => (/* binding */ createAlgoliaInsightsPlugin)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/debounce.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/safelyRunOnBrowser.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/createRef.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/isEqual.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/noop.js\");\n/* harmony import */ var _createClickedEvent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./createClickedEvent */ \"(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js\");\n/* harmony import */ var _createSearchInsightsApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createSearchInsightsApi */ \"(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js\");\n/* harmony import */ var _createViewedEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createViewedEvents */ \"(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js\");\n/* harmony import */ var _isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isAlgoliaInsightsHit */ \"(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\n\n\n\n\nvar VIEW_EVENT_DELAY = 400;\nvar ALGOLIA_INSIGHTS_VERSION = \"2.6.0\";\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nvar sendViewedObjectIDs = (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.debounce)(function(_ref) {\n    var onItemsChange = _ref.onItemsChange, items = _ref.items, insights = _ref.insights, state = _ref.state;\n    onItemsChange({\n        insights: insights,\n        insightsEvents: (0,_createViewedEvents__WEBPACK_IMPORTED_MODULE_1__.createViewedEvents)({\n            items: items\n        }).map(function(event) {\n            return _objectSpread({\n                eventName: \"Items Viewed\"\n            }, event);\n        }),\n        state: state\n    });\n}, VIEW_EVENT_DELAY);\nfunction createAlgoliaInsightsPlugin(options) {\n    var _getOptions = getOptions(options), providedInsightsClient = _getOptions.insightsClient, onItemsChange = _getOptions.onItemsChange, onSelectEvent = _getOptions.onSelect, onActiveEvent = _getOptions.onActive;\n    var insightsClient = providedInsightsClient;\n    if (!providedInsightsClient) {\n        (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__.safelyRunOnBrowser)(function(_ref2) {\n            var window = _ref2.window;\n            var pointer = window.AlgoliaAnalyticsObject || \"aa\";\n            if (typeof pointer === \"string\") {\n                insightsClient = window[pointer];\n            }\n            if (!insightsClient) {\n                window.AlgoliaAnalyticsObject = pointer;\n                if (!window[pointer]) {\n                    window[pointer] = function() {\n                        if (!window[pointer].queue) {\n                            window[pointer].queue = [];\n                        }\n                        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                            args[_key] = arguments[_key];\n                        }\n                        window[pointer].queue.push(args);\n                    };\n                }\n                window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n                insightsClient = window[pointer];\n                loadInsights(window);\n            }\n        });\n    }\n    var insights = (0,_createSearchInsightsApi__WEBPACK_IMPORTED_MODULE_3__.createSearchInsightsApi)(insightsClient);\n    var previousItems = (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_4__.createRef)([]);\n    var debouncedOnStateChange = (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.debounce)(function(_ref3) {\n        var state = _ref3.state;\n        if (!state.isOpen) {\n            return;\n        }\n        var items = state.collections.reduce(function(acc, current) {\n            return [].concat(_toConsumableArray(acc), _toConsumableArray(current.items));\n        }, []).filter(_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit);\n        if (!(0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_6__.isEqual)(previousItems.current.map(function(x) {\n            return x.objectID;\n        }), items.map(function(x) {\n            return x.objectID;\n        }))) {\n            previousItems.current = items;\n            if (items.length > 0) {\n                sendViewedObjectIDs({\n                    onItemsChange: onItemsChange,\n                    items: items,\n                    insights: insights,\n                    state: state\n                });\n            }\n        }\n    }, 0);\n    return {\n        name: \"aa.algoliaInsightsPlugin\",\n        subscribe: function subscribe(_ref4) {\n            var setContext = _ref4.setContext, onSelect = _ref4.onSelect, onActive = _ref4.onActive;\n            insightsClient(\"addAlgoliaAgent\", \"insights-plugin\");\n            setContext({\n                algoliaInsightsPlugin: {\n                    __algoliaSearchParameters: {\n                        clickAnalytics: true\n                    },\n                    insights: insights\n                }\n            });\n            onSelect(function(_ref5) {\n                var item = _ref5.item, state = _ref5.state, event = _ref5.event;\n                if (!(0,_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit)(item)) {\n                    return;\n                }\n                onSelectEvent({\n                    state: state,\n                    event: event,\n                    insights: insights,\n                    item: item,\n                    insightsEvents: [\n                        _objectSpread({\n                            eventName: \"Item Selected\"\n                        }, (0,_createClickedEvent__WEBPACK_IMPORTED_MODULE_7__.createClickedEvent)({\n                            item: item,\n                            items: previousItems.current\n                        }))\n                    ]\n                });\n            });\n            onActive(function(_ref6) {\n                var item = _ref6.item, state = _ref6.state, event = _ref6.event;\n                if (!(0,_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit)(item)) {\n                    return;\n                }\n                onActiveEvent({\n                    state: state,\n                    event: event,\n                    insights: insights,\n                    item: item,\n                    insightsEvents: [\n                        _objectSpread({\n                            eventName: \"Item Active\"\n                        }, (0,_createClickedEvent__WEBPACK_IMPORTED_MODULE_7__.createClickedEvent)({\n                            item: item,\n                            items: previousItems.current\n                        }))\n                    ]\n                });\n            });\n        },\n        onStateChange: function onStateChange(_ref7) {\n            var state = _ref7.state;\n            debouncedOnStateChange({\n                state: state\n            });\n        },\n        __autocomplete_pluginOptions: options\n    };\n}\nfunction getOptions(options) {\n    return _objectSpread({\n        onItemsChange: function onItemsChange(_ref8) {\n            var insights = _ref8.insights, insightsEvents = _ref8.insightsEvents;\n            insights.viewedObjectIDs.apply(insights, _toConsumableArray(insightsEvents.map(function(event) {\n                return _objectSpread(_objectSpread({}, event), {}, {\n                    algoliaSource: [].concat(_toConsumableArray(event.algoliaSource || []), [\n                        \"autocomplete-internal\"\n                    ])\n                });\n            })));\n        },\n        onSelect: function onSelect(_ref9) {\n            var insights = _ref9.insights, insightsEvents = _ref9.insightsEvents;\n            insights.clickedObjectIDsAfterSearch.apply(insights, _toConsumableArray(insightsEvents.map(function(event) {\n                return _objectSpread(_objectSpread({}, event), {}, {\n                    algoliaSource: [].concat(_toConsumableArray(event.algoliaSource || []), [\n                        \"autocomplete-internal\"\n                    ])\n                });\n            })));\n        },\n        onActive: _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_8__.noop\n    }, options);\n}\nfunction loadInsights(environment) {\n    var errorMessage = \"[Autocomplete]: Could not load search-insights.js. Please load it manually following https://alg.li/insights-autocomplete\";\n    try {\n        var script = environment.document.createElement(\"script\");\n        script.async = true;\n        script.src = ALGOLIA_INSIGHTS_SRC;\n        script.onerror = function() {\n            // eslint-disable-next-line no-console\n            console.error(errorMessage);\n        };\n        document.body.appendChild(script);\n    } catch (cause) {\n        // eslint-disable-next-line no-console\n        console.error(errorMessage);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClickedEvent: () => (/* binding */ createClickedEvent)\n/* harmony export */ });\nfunction createClickedEvent(_ref) {\n    var item = _ref.item, items = _ref.items;\n    return {\n        index: item.__autocomplete_indexName,\n        items: [\n            item\n        ],\n        positions: [\n            1 + items.findIndex(function(x) {\n                return x.objectID === item.objectID;\n            })\n        ],\n        queryID: item.__autocomplete_queryID,\n        algoliaSource: [\n            \"autocomplete\"\n        ]\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzL2Rpc3QvZXNtL2NyZWF0ZUNsaWNrZWRFdmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsbUJBQW1CQyxJQUFJO0lBQ3JDLElBQUlDLE9BQU9ELEtBQUtDLElBQUksRUFDbEJDLFFBQVFGLEtBQUtFLEtBQUs7SUFDcEIsT0FBTztRQUNMQyxPQUFPRixLQUFLRyx3QkFBd0I7UUFDcENGLE9BQU87WUFBQ0Q7U0FBSztRQUNiSSxXQUFXO1lBQUMsSUFBSUgsTUFBTUksU0FBUyxDQUFDLFNBQVVDLENBQUM7Z0JBQ3pDLE9BQU9BLEVBQUVDLFFBQVEsS0FBS1AsS0FBS08sUUFBUTtZQUNyQztTQUFHO1FBQ0hDLFNBQVNSLEtBQUtTLHNCQUFzQjtRQUNwQ0MsZUFBZTtZQUFDO1NBQWU7SUFDakM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1wbHVnaW4tYWxnb2xpYS1pbnNpZ2h0cy9kaXN0L2VzbS9jcmVhdGVDbGlja2VkRXZlbnQuanM/MTY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2xpY2tlZEV2ZW50KF9yZWYpIHtcbiAgdmFyIGl0ZW0gPSBfcmVmLml0ZW0sXG4gICAgaXRlbXMgPSBfcmVmLml0ZW1zO1xuICByZXR1cm4ge1xuICAgIGluZGV4OiBpdGVtLl9fYXV0b2NvbXBsZXRlX2luZGV4TmFtZSxcbiAgICBpdGVtczogW2l0ZW1dLFxuICAgIHBvc2l0aW9uczogWzEgKyBpdGVtcy5maW5kSW5kZXgoZnVuY3Rpb24gKHgpIHtcbiAgICAgIHJldHVybiB4Lm9iamVjdElEID09PSBpdGVtLm9iamVjdElEO1xuICAgIH0pXSxcbiAgICBxdWVyeUlEOiBpdGVtLl9fYXV0b2NvbXBsZXRlX3F1ZXJ5SUQsXG4gICAgYWxnb2xpYVNvdXJjZTogWydhdXRvY29tcGxldGUnXVxuICB9O1xufSJdLCJuYW1lcyI6WyJjcmVhdGVDbGlja2VkRXZlbnQiLCJfcmVmIiwiaXRlbSIsIml0ZW1zIiwiaW5kZXgiLCJfX2F1dG9jb21wbGV0ZV9pbmRleE5hbWUiLCJwb3NpdGlvbnMiLCJmaW5kSW5kZXgiLCJ4Iiwib2JqZWN0SUQiLCJxdWVyeUlEIiwiX19hdXRvY29tcGxldGVfcXVlcnlJRCIsImFsZ29saWFTb3VyY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSearchInsightsApi: () => (/* binding */ createSearchInsightsApi)\n/* harmony export */ });\n/* harmony import */ var _isModernInsightsClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isModernInsightsClient */ \"(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js\");\nvar _excluded = [\n    \"items\"\n], _excluded2 = [\n    \"items\"\n];\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction chunk(item) {\n    var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n    var chunks = [];\n    for(var i = 0; i < item.objectIDs.length; i += chunkSize){\n        chunks.push(_objectSpread(_objectSpread({}, item), {}, {\n            objectIDs: item.objectIDs.slice(i, i + chunkSize)\n        }));\n    }\n    return chunks;\n}\nfunction mapToInsightsParamsApi(params) {\n    return params.map(function(_ref) {\n        var items = _ref.items, param = _objectWithoutProperties(_ref, _excluded);\n        return _objectSpread(_objectSpread({}, param), {}, {\n            objectIDs: (items === null || items === void 0 ? void 0 : items.map(function(_ref2) {\n                var objectID = _ref2.objectID;\n                return objectID;\n            })) || param.objectIDs\n        });\n    });\n}\nfunction createSearchInsightsApi(searchInsights) {\n    var canSendHeaders = (0,_isModernInsightsClient__WEBPACK_IMPORTED_MODULE_0__.isModernInsightsClient)(searchInsights);\n    function sendToInsights(method, payloads, items) {\n        if (canSendHeaders && typeof items !== \"undefined\") {\n            var _items$0$__autocomple = items[0].__autocomplete_algoliaCredentials, appId = _items$0$__autocomple.appId, apiKey = _items$0$__autocomple.apiKey;\n            var headers = {\n                \"X-Algolia-Application-Id\": appId,\n                \"X-Algolia-API-Key\": apiKey\n            };\n            searchInsights.apply(void 0, [\n                method\n            ].concat(_toConsumableArray(payloads), [\n                {\n                    headers: headers\n                }\n            ]));\n        } else {\n            searchInsights.apply(void 0, [\n                method\n            ].concat(_toConsumableArray(payloads)));\n        }\n    }\n    return {\n        /**\n     * Initializes Insights with Algolia credentials.\n     */ init: function init(appId, apiKey) {\n            searchInsights(\"init\", {\n                appId: appId,\n                apiKey: apiKey\n            });\n        },\n        /**\n     * Sets the user token to attach to events.\n     */ setUserToken: function setUserToken(userToken) {\n            searchInsights(\"setUserToken\", userToken);\n        },\n        /**\n     * Sends click events to capture a query and its clicked items and positions.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids-after-search/\n     */ clickedObjectIDsAfterSearch: function clickedObjectIDsAfterSearch() {\n            for(var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++){\n                params[_key] = arguments[_key];\n            }\n            if (params.length > 0) {\n                sendToInsights(\"clickedObjectIDsAfterSearch\", mapToInsightsParamsApi(params), params[0].items);\n            }\n        },\n        /**\n     * Sends click events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids/\n     */ clickedObjectIDs: function clickedObjectIDs() {\n            for(var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                params[_key2] = arguments[_key2];\n            }\n            if (params.length > 0) {\n                sendToInsights(\"clickedObjectIDs\", mapToInsightsParamsApi(params), params[0].items);\n            }\n        },\n        /**\n     * Sends click events to capture the filters a user clicks on.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-filters/\n     */ clickedFilters: function clickedFilters() {\n            for(var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n                params[_key3] = arguments[_key3];\n            }\n            if (params.length > 0) {\n                searchInsights.apply(void 0, [\n                    \"clickedFilters\"\n                ].concat(params));\n            }\n        },\n        /**\n     * Sends conversion events to capture a query and its clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids-after-search/\n     */ convertedObjectIDsAfterSearch: function convertedObjectIDsAfterSearch() {\n            for(var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n                params[_key4] = arguments[_key4];\n            }\n            if (params.length > 0) {\n                sendToInsights(\"convertedObjectIDsAfterSearch\", mapToInsightsParamsApi(params), params[0].items);\n            }\n        },\n        /**\n     * Sends conversion events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids/\n     */ convertedObjectIDs: function convertedObjectIDs() {\n            for(var _len5 = arguments.length, params = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++){\n                params[_key5] = arguments[_key5];\n            }\n            if (params.length > 0) {\n                sendToInsights(\"convertedObjectIDs\", mapToInsightsParamsApi(params), params[0].items);\n            }\n        },\n        /**\n     * Sends conversion events to capture the filters a user uses when converting.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-filters/\n     */ convertedFilters: function convertedFilters() {\n            for(var _len6 = arguments.length, params = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++){\n                params[_key6] = arguments[_key6];\n            }\n            if (params.length > 0) {\n                searchInsights.apply(void 0, [\n                    \"convertedFilters\"\n                ].concat(params));\n            }\n        },\n        /**\n     * Sends view events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-object-ids/\n     */ viewedObjectIDs: function viewedObjectIDs() {\n            for(var _len7 = arguments.length, params = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++){\n                params[_key7] = arguments[_key7];\n            }\n            if (params.length > 0) {\n                params.reduce(function(acc, _ref3) {\n                    var items = _ref3.items, param = _objectWithoutProperties(_ref3, _excluded2);\n                    return [].concat(_toConsumableArray(acc), _toConsumableArray(chunk(_objectSpread(_objectSpread({}, param), {}, {\n                        objectIDs: (items === null || items === void 0 ? void 0 : items.map(function(_ref4) {\n                            var objectID = _ref4.objectID;\n                            return objectID;\n                        })) || param.objectIDs\n                    })).map(function(payload) {\n                        return {\n                            items: items,\n                            payload: payload\n                        };\n                    })));\n                }, []).forEach(function(_ref5) {\n                    var items = _ref5.items, payload = _ref5.payload;\n                    return sendToInsights(\"viewedObjectIDs\", [\n                        payload\n                    ], items);\n                });\n            }\n        },\n        /**\n     * Sends view events to capture the filters a user uses when viewing.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-filters/\n     */ viewedFilters: function viewedFilters() {\n            for(var _len8 = arguments.length, params = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++){\n                params[_key8] = arguments[_key8];\n            }\n            if (params.length > 0) {\n                searchInsights.apply(void 0, [\n                    \"viewedFilters\"\n                ].concat(params));\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createViewedEvents: () => (/* binding */ createViewedEvents)\n/* harmony export */ });\nfunction createViewedEvents(_ref) {\n    var items = _ref.items;\n    var itemsByIndexName = items.reduce(function(acc, current) {\n        var _acc$current$__autoco;\n        acc[current.__autocomplete_indexName] = ((_acc$current$__autoco = acc[current.__autocomplete_indexName]) !== null && _acc$current$__autoco !== void 0 ? _acc$current$__autoco : []).concat(current);\n        return acc;\n    }, {});\n    return Object.keys(itemsByIndexName).map(function(indexName) {\n        var items = itemsByIndexName[indexName];\n        return {\n            index: indexName,\n            items: items,\n            algoliaSource: [\n                \"autocomplete\"\n            ]\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzL2Rpc3QvZXNtL2NyZWF0ZVZpZXdlZEV2ZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsbUJBQW1CQyxJQUFJO0lBQ3JDLElBQUlDLFFBQVFELEtBQUtDLEtBQUs7SUFDdEIsSUFBSUMsbUJBQW1CRCxNQUFNRSxNQUFNLENBQUMsU0FBVUMsR0FBRyxFQUFFQyxPQUFPO1FBQ3hELElBQUlDO1FBQ0pGLEdBQUcsQ0FBQ0MsUUFBUUUsd0JBQXdCLENBQUMsR0FBRyxDQUFDLENBQUNELHdCQUF3QkYsR0FBRyxDQUFDQyxRQUFRRSx3QkFBd0IsQ0FBQyxNQUFNLFFBQVFELDBCQUEwQixLQUFLLElBQUlBLHdCQUF3QixFQUFFLEVBQUVFLE1BQU0sQ0FBQ0g7UUFDM0wsT0FBT0Q7SUFDVCxHQUFHLENBQUM7SUFDSixPQUFPSyxPQUFPQyxJQUFJLENBQUNSLGtCQUFrQlMsR0FBRyxDQUFDLFNBQVVDLFNBQVM7UUFDMUQsSUFBSVgsUUFBUUMsZ0JBQWdCLENBQUNVLFVBQVU7UUFDdkMsT0FBTztZQUNMQyxPQUFPRDtZQUNQWCxPQUFPQTtZQUNQYSxlQUFlO2dCQUFDO2FBQWU7UUFDakM7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzL2Rpc3QvZXNtL2NyZWF0ZVZpZXdlZEV2ZW50cy5qcz9hNzhjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVWaWV3ZWRFdmVudHMoX3JlZikge1xuICB2YXIgaXRlbXMgPSBfcmVmLml0ZW1zO1xuICB2YXIgaXRlbXNCeUluZGV4TmFtZSA9IGl0ZW1zLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXJyZW50KSB7XG4gICAgdmFyIF9hY2MkY3VycmVudCRfX2F1dG9jbztcbiAgICBhY2NbY3VycmVudC5fX2F1dG9jb21wbGV0ZV9pbmRleE5hbWVdID0gKChfYWNjJGN1cnJlbnQkX19hdXRvY28gPSBhY2NbY3VycmVudC5fX2F1dG9jb21wbGV0ZV9pbmRleE5hbWVdKSAhPT0gbnVsbCAmJiBfYWNjJGN1cnJlbnQkX19hdXRvY28gIT09IHZvaWQgMCA/IF9hY2MkY3VycmVudCRfX2F1dG9jbyA6IFtdKS5jb25jYXQoY3VycmVudCk7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuICByZXR1cm4gT2JqZWN0LmtleXMoaXRlbXNCeUluZGV4TmFtZSkubWFwKGZ1bmN0aW9uIChpbmRleE5hbWUpIHtcbiAgICB2YXIgaXRlbXMgPSBpdGVtc0J5SW5kZXhOYW1lW2luZGV4TmFtZV07XG4gICAgcmV0dXJuIHtcbiAgICAgIGluZGV4OiBpbmRleE5hbWUsXG4gICAgICBpdGVtczogaXRlbXMsXG4gICAgICBhbGdvbGlhU291cmNlOiBbJ2F1dG9jb21wbGV0ZSddXG4gICAgfTtcbiAgfSk7XG59Il0sIm5hbWVzIjpbImNyZWF0ZVZpZXdlZEV2ZW50cyIsIl9yZWYiLCJpdGVtcyIsIml0ZW1zQnlJbmRleE5hbWUiLCJyZWR1Y2UiLCJhY2MiLCJjdXJyZW50IiwiX2FjYyRjdXJyZW50JF9fYXV0b2NvIiwiX19hdXRvY29tcGxldGVfaW5kZXhOYW1lIiwiY29uY2F0IiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsImluZGV4TmFtZSIsImluZGV4IiwiYWxnb2xpYVNvdXJjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAlgoliaInsightsHit: () => (/* binding */ isAlgoliaInsightsHit)\n/* harmony export */ });\nfunction isAlgoliaInsightsHit(hit) {\n    return hit.objectID && hit.__autocomplete_indexName && hit.__autocomplete_queryID;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzL2Rpc3QvZXNtL2lzQWxnb2xpYUluc2lnaHRzSGl0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxxQkFBcUJDLEdBQUc7SUFDdEMsT0FBT0EsSUFBSUMsUUFBUSxJQUFJRCxJQUFJRSx3QkFBd0IsSUFBSUYsSUFBSUcsc0JBQXNCO0FBQ25GIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzL2Rpc3QvZXNtL2lzQWxnb2xpYUluc2lnaHRzSGl0LmpzP2M2ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzQWxnb2xpYUluc2lnaHRzSGl0KGhpdCkge1xuICByZXR1cm4gaGl0Lm9iamVjdElEICYmIGhpdC5fX2F1dG9jb21wbGV0ZV9pbmRleE5hbWUgJiYgaGl0Ll9fYXV0b2NvbXBsZXRlX3F1ZXJ5SUQ7XG59Il0sIm5hbWVzIjpbImlzQWxnb2xpYUluc2lnaHRzSGl0IiwiaGl0Iiwib2JqZWN0SUQiLCJfX2F1dG9jb21wbGV0ZV9pbmRleE5hbWUiLCJfX2F1dG9jb21wbGV0ZV9xdWVyeUlEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isModernInsightsClient: () => (/* binding */ isModernInsightsClient)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n        try {\n            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                if (Object(_i) !== _i) return;\n                _n = !1;\n            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n        } catch (err) {\n            _d = !0, _e = err;\n        } finally{\n            try {\n                if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */ function isModernInsightsClient(client) {\n    var _split$map = (client.version || \"\").split(\".\").map(Number), _split$map2 = _slicedToArray(_split$map, 2), major = _split$map2[0], minor = _split$map2[1];\n    /* eslint-disable @typescript-eslint/camelcase */ var v3 = major >= 3;\n    var v2_4 = major === 2 && minor >= 4;\n    var v1_10 = major === 1 && minor >= 10;\n    return v3 || v2_4 || v1_10;\n/* eslint-enable @typescript-eslint/camelcase */ }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzL2Rpc3QvZXNtL2lzTW9kZXJuSW5zaWdodHNDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLGVBQWVDLEdBQUcsRUFBRUMsQ0FBQztJQUFJLE9BQU9DLGdCQUFnQkYsUUFBUUcsc0JBQXNCSCxLQUFLQyxNQUFNRyw0QkFBNEJKLEtBQUtDLE1BQU1JO0FBQW9CO0FBQzdKLFNBQVNBO0lBQXFCLE1BQU0sSUFBSUMsVUFBVTtBQUE4STtBQUNoTSxTQUFTRiw0QkFBNEJHLENBQUMsRUFBRUMsTUFBTTtJQUFJLElBQUksQ0FBQ0QsR0FBRztJQUFRLElBQUksT0FBT0EsTUFBTSxVQUFVLE9BQU9FLGtCQUFrQkYsR0FBR0M7SUFBUyxJQUFJRSxJQUFJQyxPQUFPQyxTQUFTLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDUCxHQUFHUSxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQUksSUFBSUwsTUFBTSxZQUFZSCxFQUFFUyxXQUFXLEVBQUVOLElBQUlILEVBQUVTLFdBQVcsQ0FBQ0MsSUFBSTtJQUFFLElBQUlQLE1BQU0sU0FBU0EsTUFBTSxPQUFPLE9BQU9RLE1BQU1DLElBQUksQ0FBQ1o7SUFBSSxJQUFJRyxNQUFNLGVBQWUsMkNBQTJDVSxJQUFJLENBQUNWLElBQUksT0FBT0Qsa0JBQWtCRixHQUFHQztBQUFTO0FBQy9aLFNBQVNDLGtCQUFrQlQsR0FBRyxFQUFFcUIsR0FBRztJQUFJLElBQUlBLE9BQU8sUUFBUUEsTUFBTXJCLElBQUlzQixNQUFNLEVBQUVELE1BQU1yQixJQUFJc0IsTUFBTTtJQUFFLElBQUssSUFBSXJCLElBQUksR0FBR3NCLE9BQU8sSUFBSUwsTUFBTUcsTUFBTXBCLElBQUlvQixLQUFLcEIsSUFBS3NCLElBQUksQ0FBQ3RCLEVBQUUsR0FBR0QsR0FBRyxDQUFDQyxFQUFFO0lBQUUsT0FBT3NCO0FBQU07QUFDbEwsU0FBU3BCLHNCQUFzQkgsR0FBRyxFQUFFQyxDQUFDO0lBQUksSUFBSXVCLEtBQUssUUFBUXhCLE1BQU0sT0FBTyxlQUFlLE9BQU95QixVQUFVekIsR0FBRyxDQUFDeUIsT0FBT0MsUUFBUSxDQUFDLElBQUkxQixHQUFHLENBQUMsYUFBYTtJQUFFLElBQUksUUFBUXdCLElBQUk7UUFBRSxJQUFJRyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQyxPQUFPLEVBQUUsRUFBRUMsS0FBSyxDQUFDLEdBQUdDLEtBQUssQ0FBQztRQUFHLElBQUk7WUFBRSxJQUFJSixLQUFLLENBQUNMLEtBQUtBLEdBQUdWLElBQUksQ0FBQ2QsSUFBRyxFQUFHa0MsSUFBSSxFQUFFLE1BQU1qQyxHQUFHO2dCQUFFLElBQUlVLE9BQU9hLFFBQVFBLElBQUk7Z0JBQVFRLEtBQUssQ0FBQztZQUFHLE9BQU8sTUFBTyxDQUFFQSxDQUFBQSxLQUFLLENBQUNMLEtBQUtFLEdBQUdmLElBQUksQ0FBQ1UsR0FBRSxFQUFHVyxJQUFJLEtBQU1KLENBQUFBLEtBQUtLLElBQUksQ0FBQ1QsR0FBR1UsS0FBSyxHQUFHTixLQUFLVCxNQUFNLEtBQUtyQixDQUFBQSxHQUFJK0IsS0FBSyxDQUFDO1FBQUksRUFBRSxPQUFPTSxLQUFLO1lBQUVMLEtBQUssQ0FBQyxHQUFHTCxLQUFLVTtRQUFLLFNBQVU7WUFBRSxJQUFJO2dCQUFFLElBQUksQ0FBQ04sTUFBTSxRQUFRUixHQUFHZSxNQUFNLElBQUtULENBQUFBLEtBQUtOLEdBQUdlLE1BQU0sSUFBSTVCLE9BQU9tQixRQUFRQSxFQUFDLEdBQUk7WUFBUSxTQUFVO2dCQUFFLElBQUlHLElBQUksTUFBTUw7WUFBSTtRQUFFO1FBQUUsT0FBT0c7SUFBTTtBQUFFO0FBQzNrQixTQUFTN0IsZ0JBQWdCRixHQUFHO0lBQUksSUFBSWtCLE1BQU1zQixPQUFPLENBQUN4QyxNQUFNLE9BQU9BO0FBQUs7QUFDcEU7OztDQUdDLEdBQ00sU0FBU3lDLHVCQUF1QkMsTUFBTTtJQUMzQyxJQUFJQyxhQUFhLENBQUNELE9BQU9FLE9BQU8sSUFBSSxFQUFDLEVBQUdDLEtBQUssQ0FBQyxLQUFLQyxHQUFHLENBQUNDLFNBQ3JEQyxjQUFjakQsZUFBZTRDLFlBQVksSUFDekNNLFFBQVFELFdBQVcsQ0FBQyxFQUFFLEVBQ3RCRSxRQUFRRixXQUFXLENBQUMsRUFBRTtJQUV4QiwrQ0FBK0MsR0FDL0MsSUFBSUcsS0FBS0YsU0FBUztJQUNsQixJQUFJRyxPQUFPSCxVQUFVLEtBQUtDLFNBQVM7SUFDbkMsSUFBSUcsUUFBUUosVUFBVSxLQUFLQyxTQUFTO0lBQ3BDLE9BQU9DLE1BQU1DLFFBQVFDO0FBQ3JCLDhDQUE4QyxHQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1wbHVnaW4tYWxnb2xpYS1pbnNpZ2h0cy9kaXN0L2VzbS9pc01vZGVybkluc2lnaHRzQ2xpZW50LmpzPzM5MTAiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgYXJyMltpXSA9IGFycltpXTsgcmV0dXJuIGFycjI7IH1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgdmFyIF9pID0gbnVsbCA9PSBhcnIgPyBudWxsIDogXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl07IGlmIChudWxsICE9IF9pKSB7IHZhciBfcywgX2UsIF94LCBfciwgX2FyciA9IFtdLCBfbiA9ICEwLCBfZCA9ICExOyB0cnkgeyBpZiAoX3ggPSAoX2kgPSBfaS5jYWxsKGFycikpLm5leHQsIDAgPT09IGkpIHsgaWYgKE9iamVjdChfaSkgIT09IF9pKSByZXR1cm47IF9uID0gITE7IH0gZWxzZSBmb3IgKDsgIShfbiA9IChfcyA9IF94LmNhbGwoX2kpKS5kb25lKSAmJiAoX2Fyci5wdXNoKF9zLnZhbHVlKSwgX2Fyci5sZW5ndGggIT09IGkpOyBfbiA9ICEwKTsgfSBjYXRjaCAoZXJyKSB7IF9kID0gITAsIF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIG51bGwgIT0gX2kucmV0dXJuICYmIChfciA9IF9pLnJldHVybigpLCBPYmplY3QoX3IpICE9PSBfcikpIHJldHVybjsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IH1cbmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfVxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIGEgZ2l2ZW4gaW5zaWdodHMgYGNsaWVudGAgc3VwcG9ydHMgdGhlIG9wdGlvbmFsIGNhbGwgdG8gYGluaXRgXG4gKiBhbmQgdGhlIGFiaWxpdHkgdG8gc2V0IGNyZWRlbnRpYWxzIHZpYSBleHRyYSBwYXJhbWV0ZXJzIHdoZW4gc2VuZGluZyBldmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc01vZGVybkluc2lnaHRzQ2xpZW50KGNsaWVudCkge1xuICB2YXIgX3NwbGl0JG1hcCA9IChjbGllbnQudmVyc2lvbiB8fCAnJykuc3BsaXQoJy4nKS5tYXAoTnVtYmVyKSxcbiAgICBfc3BsaXQkbWFwMiA9IF9zbGljZWRUb0FycmF5KF9zcGxpdCRtYXAsIDIpLFxuICAgIG1ham9yID0gX3NwbGl0JG1hcDJbMF0sXG4gICAgbWlub3IgPSBfc3BsaXQkbWFwMlsxXTtcblxuICAvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvY2FtZWxjYXNlICovXG4gIHZhciB2MyA9IG1ham9yID49IDM7XG4gIHZhciB2Ml80ID0gbWFqb3IgPT09IDIgJiYgbWlub3IgPj0gNDtcbiAgdmFyIHYxXzEwID0gbWFqb3IgPT09IDEgJiYgbWlub3IgPj0gMTA7XG4gIHJldHVybiB2MyB8fCB2Ml80IHx8IHYxXzEwO1xuICAvKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9jYW1lbGNhc2UgKi9cbn0iXSwibmFtZXMiOlsiX3NsaWNlZFRvQXJyYXkiLCJhcnIiLCJpIiwiX2FycmF5V2l0aEhvbGVzIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsIlR5cGVFcnJvciIsIm8iLCJtaW5MZW4iLCJfYXJyYXlMaWtlVG9BcnJheSIsIm4iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsIkFycmF5IiwiZnJvbSIsInRlc3QiLCJsZW4iLCJsZW5ndGgiLCJhcnIyIiwiX2kiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9zIiwiX2UiLCJfeCIsIl9yIiwiX2FyciIsIl9uIiwiX2QiLCJuZXh0IiwiZG9uZSIsInB1c2giLCJ2YWx1ZSIsImVyciIsInJldHVybiIsImlzQXJyYXkiLCJpc01vZGVybkluc2lnaHRzQ2xpZW50IiwiY2xpZW50IiwiX3NwbGl0JG1hcCIsInZlcnNpb24iLCJzcGxpdCIsIm1hcCIsIk51bWJlciIsIl9zcGxpdCRtYXAyIiwibWFqb3IiLCJtaW5vciIsInYzIiwidjJfNCIsInYxXzEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/createRef.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/createRef.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRef: () => (/* binding */ createRef)\n/* harmony export */ });\nfunction createRef(initialValue) {\n    return {\n        current: initialValue\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9jcmVhdGVSZWYuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFVBQVVDLFlBQVk7SUFDcEMsT0FBTztRQUNMQyxTQUFTRDtJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG93Yml0ZS1yZWFjdC8uL25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtc2hhcmVkL2Rpc3QvZXNtL2NyZWF0ZVJlZi5qcz9mY2M0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZWYoaW5pdGlhbFZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgY3VycmVudDogaW5pdGlhbFZhbHVlXG4gIH07XG59Il0sIm5hbWVzIjpbImNyZWF0ZVJlZiIsImluaXRpYWxWYWx1ZSIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/createRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/debounce.js":
/*!************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/debounce.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debounce: () => (/* binding */ debounce)\n/* harmony export */ });\nfunction debounce(fn, time) {\n    var timerId = undefined;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (timerId) {\n            clearTimeout(timerId);\n        }\n        timerId = setTimeout(function() {\n            return fn.apply(void 0, args);\n        }, time);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9kZWJvdW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsU0FBU0MsRUFBRSxFQUFFQyxJQUFJO0lBQy9CLElBQUlDLFVBQVVDO0lBQ2QsT0FBTztRQUNMLElBQUssSUFBSUMsT0FBT0MsVUFBVUMsTUFBTSxFQUFFQyxPQUFPLElBQUlDLE1BQU1KLE9BQU9LLE9BQU8sR0FBR0EsT0FBT0wsTUFBTUssT0FBUTtZQUN2RkYsSUFBSSxDQUFDRSxLQUFLLEdBQUdKLFNBQVMsQ0FBQ0ksS0FBSztRQUM5QjtRQUNBLElBQUlQLFNBQVM7WUFDWFEsYUFBYVI7UUFDZjtRQUNBQSxVQUFVUyxXQUFXO1lBQ25CLE9BQU9YLEdBQUdZLEtBQUssQ0FBQyxLQUFLLEdBQUdMO1FBQzFCLEdBQUdOO0lBQ0w7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1zaGFyZWQvZGlzdC9lc20vZGVib3VuY2UuanM/NTM2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZGVib3VuY2UoZm4sIHRpbWUpIHtcbiAgdmFyIHRpbWVySWQgPSB1bmRlZmluZWQ7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cbiAgICBpZiAodGltZXJJZCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVySWQpO1xuICAgIH1cbiAgICB0aW1lcklkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gZm4uYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9LCB0aW1lKTtcbiAgfTtcbn0iXSwibmFtZXMiOlsiZGVib3VuY2UiLCJmbiIsInRpbWUiLCJ0aW1lcklkIiwidW5kZWZpbmVkIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiYXBwbHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/debounce.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/decycle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/decycle.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decycle: () => (/* binding */ decycle)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n        try {\n            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                if (Object(_i) !== _i) return;\n                _n = !1;\n            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n        } catch (err) {\n            _d = !0, _e = err;\n        } finally{\n            try {\n                if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\n/**\n * Decycles objects with circular references.\n * This is used to print cyclic structures in development environment only.\n */ function decycle(obj) {\n    var seen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n    if ( false || !obj || _typeof(obj) !== \"object\") {\n        return obj;\n    }\n    if (seen.has(obj)) {\n        return \"[Circular]\";\n    }\n    var newSeen = seen.add(obj);\n    if (Array.isArray(obj)) {\n        return obj.map(function(x) {\n            return decycle(x, newSeen);\n        });\n    }\n    return Object.fromEntries(Object.entries(obj).map(function(_ref) {\n        var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];\n        return [\n            key,\n            decycle(value, newSeen)\n        ];\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/decycle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/flatten.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/flatten.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flatten: () => (/* binding */ flatten)\n/* harmony export */ });\nfunction flatten(values) {\n    return values.reduce(function(a, b) {\n        return a.concat(b);\n    }, []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9mbGF0dGVuLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxRQUFRQyxNQUFNO0lBQzVCLE9BQU9BLE9BQU9DLE1BQU0sQ0FBQyxTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDakMsT0FBT0QsRUFBRUUsTUFBTSxDQUFDRDtJQUNsQixHQUFHLEVBQUU7QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1zaGFyZWQvZGlzdC9lc20vZmxhdHRlbi5qcz8yMzU0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuKHZhbHVlcykge1xuICByZXR1cm4gdmFsdWVzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBhLmNvbmNhdChiKTtcbiAgfSwgW10pO1xufSJdLCJuYW1lcyI6WyJmbGF0dGVuIiwidmFsdWVzIiwicmVkdWNlIiwiYSIsImIiLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/flatten.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/generateAutocompleteId.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/generateAutocompleteId.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAutocompleteId: () => (/* binding */ generateAutocompleteId)\n/* harmony export */ });\nvar autocompleteId = 0;\nfunction generateAutocompleteId() {\n    return \"autocomplete-\".concat(autocompleteId++);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9nZW5lcmF0ZUF1dG9jb21wbGV0ZUlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFJQSxpQkFBaUI7QUFDZCxTQUFTQztJQUNkLE9BQU8sZ0JBQWdCQyxNQUFNLENBQUNGO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9nZW5lcmF0ZUF1dG9jb21wbGV0ZUlkLmpzPzg2YTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGF1dG9jb21wbGV0ZUlkID0gMDtcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUF1dG9jb21wbGV0ZUlkKCkge1xuICByZXR1cm4gXCJhdXRvY29tcGxldGUtXCIuY29uY2F0KGF1dG9jb21wbGV0ZUlkKyspO1xufSJdLCJuYW1lcyI6WyJhdXRvY29tcGxldGVJZCIsImdlbmVyYXRlQXV0b2NvbXBsZXRlSWQiLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/generateAutocompleteId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/getItemsCount.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/getItemsCount.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getItemsCount: () => (/* binding */ getItemsCount)\n/* harmony export */ });\nfunction getItemsCount(state) {\n    if (state.collections.length === 0) {\n        return 0;\n    }\n    return state.collections.reduce(function(sum, collection) {\n        return sum + collection.items.length;\n    }, 0);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9nZXRJdGVtc0NvdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxjQUFjQyxLQUFLO0lBQ2pDLElBQUlBLE1BQU1DLFdBQVcsQ0FBQ0MsTUFBTSxLQUFLLEdBQUc7UUFDbEMsT0FBTztJQUNUO0lBQ0EsT0FBT0YsTUFBTUMsV0FBVyxDQUFDRSxNQUFNLENBQUMsU0FBVUMsR0FBRyxFQUFFQyxVQUFVO1FBQ3ZELE9BQU9ELE1BQU1DLFdBQVdDLEtBQUssQ0FBQ0osTUFBTTtJQUN0QyxHQUFHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG93Yml0ZS1yZWFjdC8uL25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtc2hhcmVkL2Rpc3QvZXNtL2dldEl0ZW1zQ291bnQuanM/M2NhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2V0SXRlbXNDb3VudChzdGF0ZSkge1xuICBpZiAoc3RhdGUuY29sbGVjdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgcmV0dXJuIHN0YXRlLmNvbGxlY3Rpb25zLnJlZHVjZShmdW5jdGlvbiAoc3VtLCBjb2xsZWN0aW9uKSB7XG4gICAgcmV0dXJuIHN1bSArIGNvbGxlY3Rpb24uaXRlbXMubGVuZ3RoO1xuICB9LCAwKTtcbn0iXSwibmFtZXMiOlsiZ2V0SXRlbXNDb3VudCIsInN0YXRlIiwiY29sbGVjdGlvbnMiLCJsZW5ndGgiLCJyZWR1Y2UiLCJzdW0iLCJjb2xsZWN0aW9uIiwiaXRlbXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/getItemsCount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/invariant.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/invariant.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invariant: () => (/* binding */ invariant)\n/* harmony export */ });\n/**\n * Throws an error if the condition is not met in development mode.\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */ function invariant(condition, message) {\n    if (false) {}\n    if (!condition) {\n        throw new Error(\"[Autocomplete] \".concat(typeof message === \"function\" ? message() : message));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9pbnZhcmlhbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FDTSxTQUFTQSxVQUFVQyxTQUFTLEVBQUVDLE9BQU87SUFDMUMsSUFBSSxLQUFzQyxFQUFJLEVBRTdDO0lBQ0QsSUFBSSxDQUFDRCxXQUFXO1FBQ2QsTUFBTSxJQUFJRyxNQUFNLGtCQUFrQkMsTUFBTSxDQUFDLE9BQU9ILFlBQVksYUFBYUEsWUFBWUE7SUFDdkY7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1zaGFyZWQvZGlzdC9lc20vaW52YXJpYW50LmpzPzJjNWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaHJvd3MgYW4gZXJyb3IgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0IGluIGRldmVsb3BtZW50IG1vZGUuXG4gKiBUaGlzIGlzIHVzZWQgdG8gbWFrZSBkZXZlbG9wbWVudCBhIGJldHRlciBleHBlcmllbmNlIHRvIHByb3ZpZGUgZ3VpZGFuY2UgYXNcbiAqIHRvIHdoZXJlIHRoZSBlcnJvciBjb21lcyBmcm9tLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoIShwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIltBdXRvY29tcGxldGVdIFwiLmNvbmNhdCh0eXBlb2YgbWVzc2FnZSA9PT0gJ2Z1bmN0aW9uJyA/IG1lc3NhZ2UoKSA6IG1lc3NhZ2UpKTtcbiAgfVxufSJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwicHJvY2VzcyIsIkVycm9yIiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/invariant.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/isEqual.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/isEqual.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isEqual: () => (/* binding */ isEqual)\n/* harmony export */ });\nfunction isPrimitive(obj) {\n    return obj !== Object(obj);\n}\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (isPrimitive(first) || isPrimitive(second) || typeof first === \"function\" || typeof second === \"function\") {\n        return first === second;\n    }\n    if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n    }\n    for(var _i = 0, _Object$keys = Object.keys(first); _i < _Object$keys.length; _i++){\n        var key = _Object$keys[_i];\n        if (!(key in second)) {\n            return false;\n        }\n        if (!isEqual(first[key], second[key])) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9pc0VxdWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxTQUFTQSxZQUFZQyxHQUFHO0lBQ3RCLE9BQU9BLFFBQVFDLE9BQU9EO0FBQ3hCO0FBQ08sU0FBU0UsUUFBUUMsS0FBSyxFQUFFQyxNQUFNO0lBQ25DLElBQUlELFVBQVVDLFFBQVE7UUFDcEIsT0FBTztJQUNUO0lBQ0EsSUFBSUwsWUFBWUksVUFBVUosWUFBWUssV0FBVyxPQUFPRCxVQUFVLGNBQWMsT0FBT0MsV0FBVyxZQUFZO1FBQzVHLE9BQU9ELFVBQVVDO0lBQ25CO0lBQ0EsSUFBSUgsT0FBT0ksSUFBSSxDQUFDRixPQUFPRyxNQUFNLEtBQUtMLE9BQU9JLElBQUksQ0FBQ0QsUUFBUUUsTUFBTSxFQUFFO1FBQzVELE9BQU87SUFDVDtJQUNBLElBQUssSUFBSUMsS0FBSyxHQUFHQyxlQUFlUCxPQUFPSSxJQUFJLENBQUNGLFFBQVFJLEtBQUtDLGFBQWFGLE1BQU0sRUFBRUMsS0FBTTtRQUNsRixJQUFJRSxNQUFNRCxZQUFZLENBQUNELEdBQUc7UUFDMUIsSUFBSSxDQUFFRSxDQUFBQSxPQUFPTCxNQUFLLEdBQUk7WUFDcEIsT0FBTztRQUNUO1FBQ0EsSUFBSSxDQUFDRixRQUFRQyxLQUFLLENBQUNNLElBQUksRUFBRUwsTUFBTSxDQUFDSyxJQUFJLEdBQUc7WUFDckMsT0FBTztRQUNUO0lBQ0Y7SUFDQSxPQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG93Yml0ZS1yZWFjdC8uL25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtc2hhcmVkL2Rpc3QvZXNtL2lzRXF1YWwuanM/MDdmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc1ByaW1pdGl2ZShvYmopIHtcbiAgcmV0dXJuIG9iaiAhPT0gT2JqZWN0KG9iaik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNFcXVhbChmaXJzdCwgc2Vjb25kKSB7XG4gIGlmIChmaXJzdCA9PT0gc2Vjb25kKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKGlzUHJpbWl0aXZlKGZpcnN0KSB8fCBpc1ByaW1pdGl2ZShzZWNvbmQpIHx8IHR5cGVvZiBmaXJzdCA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2Ygc2Vjb25kID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGZpcnN0ID09PSBzZWNvbmQ7XG4gIH1cbiAgaWYgKE9iamVjdC5rZXlzKGZpcnN0KS5sZW5ndGggIT09IE9iamVjdC5rZXlzKHNlY29uZCkubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRrZXlzID0gT2JqZWN0LmtleXMoZmlyc3QpOyBfaSA8IF9PYmplY3Qka2V5cy5sZW5ndGg7IF9pKyspIHtcbiAgICB2YXIga2V5ID0gX09iamVjdCRrZXlzW19pXTtcbiAgICBpZiAoIShrZXkgaW4gc2Vjb25kKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoIWlzRXF1YWwoZmlyc3Rba2V5XSwgc2Vjb25kW2tleV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufSJdLCJuYW1lcyI6WyJpc1ByaW1pdGl2ZSIsIm9iaiIsIk9iamVjdCIsImlzRXF1YWwiLCJmaXJzdCIsInNlY29uZCIsImtleXMiLCJsZW5ndGgiLCJfaSIsIl9PYmplY3Qka2V5cyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/isEqual.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/noop.js":
/*!********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/noop.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noop: () => (/* binding */ noop)\n/* harmony export */ });\nvar noop = function noop() {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9ub29wLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFJQSxPQUFPLFNBQVNBLFFBQVEsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb3diaXRlLXJlYWN0Ly4vbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1zaGFyZWQvZGlzdC9lc20vbm9vcC5qcz80MzRkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgbm9vcCA9IGZ1bmN0aW9uIG5vb3AoKSB7fTsiXSwibmFtZXMiOlsibm9vcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/noop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/safelyRunOnBrowser.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/safelyRunOnBrowser.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safelyRunOnBrowser: () => (/* binding */ safelyRunOnBrowser)\n/* harmony export */ });\n/**\n * Safely runs code meant for browser environments only.\n */ function safelyRunOnBrowser(callback) {\n    if (false) {}\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS9zYWZlbHlSdW5PbkJyb3dzZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBQ00sU0FBU0EsbUJBQW1CQyxRQUFRO0lBQ3pDLElBQUksS0FBa0IsRUFBYSxFQUlsQztJQUNELE9BQU9FO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG93Yml0ZS1yZWFjdC8uL25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtc2hhcmVkL2Rpc3QvZXNtL3NhZmVseVJ1bk9uQnJvd3Nlci5qcz8wY2U1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2FmZWx5IHJ1bnMgY29kZSBtZWFudCBmb3IgYnJvd3NlciBlbnZpcm9ubWVudHMgb25seS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVseVJ1bk9uQnJvd3NlcihjYWxsYmFjaykge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gY2FsbGJhY2soe1xuICAgICAgd2luZG93OiB3aW5kb3dcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gdW5kZWZpbmVkO1xufSJdLCJuYW1lcyI6WyJzYWZlbHlSdW5PbkJyb3dzZXIiLCJjYWxsYmFjayIsIndpbmRvdyIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/safelyRunOnBrowser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/userAgents.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/userAgents.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userAgents: () => (/* binding */ userAgents)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/version.js\");\n\nvar userAgents = [\n    {\n        segment: \"autocomplete-core\",\n        version: _version__WEBPACK_IMPORTED_MODULE_0__.version\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS91c2VyQWdlbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLElBQUlDLGFBQWE7SUFBQztRQUN2QkMsU0FBUztRQUNURixTQUFTQSw2Q0FBT0E7SUFDbEI7Q0FBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS91c2VyQWdlbnRzLmpzPzA5YjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbic7XG5leHBvcnQgdmFyIHVzZXJBZ2VudHMgPSBbe1xuICBzZWdtZW50OiAnYXV0b2NvbXBsZXRlLWNvcmUnLFxuICB2ZXJzaW9uOiB2ZXJzaW9uXG59XTsiXSwibmFtZXMiOlsidmVyc2lvbiIsInVzZXJBZ2VudHMiLCJzZWdtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/userAgents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/version.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nvar version = \"1.9.3\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFJQSxVQUFVLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG93Yml0ZS1yZWFjdC8uL25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtc2hhcmVkL2Rpc3QvZXNtL3ZlcnNpb24uanM/ZjVmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIHZlcnNpb24gPSAnMS45LjMnOyJdLCJuYW1lcyI6WyJ2ZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/warn.js":
/*!********************************************************************!*\
  !*** ./node_modules/@algolia/autocomplete-shared/dist/esm/warn.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   warn: () => (/* binding */ warn),\n/* harmony export */   warnCache: () => (/* binding */ warnCache)\n/* harmony export */ });\nvar warnCache = {\n    current: {}\n};\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */ function warn(condition, message) {\n    if (false) {}\n    if (condition) {\n        return;\n    }\n    var sanitizedMessage = message.trim();\n    var hasAlreadyPrinted = warnCache.current[sanitizedMessage];\n    if (!hasAlreadyPrinted) {\n        warnCache.current[sanitizedMessage] = true;\n        // eslint-disable-next-line no-console\n        console.warn(\"[Autocomplete] \".concat(sanitizedMessage));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS93YXJuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBSUEsWUFBWTtJQUNyQkMsU0FBUyxDQUFDO0FBQ1osRUFBRTtBQUVGOzs7Q0FHQyxHQUNNLFNBQVNDLEtBQUtDLFNBQVMsRUFBRUMsT0FBTztJQUNyQyxJQUFJLEtBQXNDLEVBQUksRUFFN0M7SUFDRCxJQUFJRCxXQUFXO1FBQ2I7SUFDRjtJQUNBLElBQUlHLG1CQUFtQkYsUUFBUUcsSUFBSTtJQUNuQyxJQUFJQyxvQkFBb0JSLFVBQVVDLE9BQU8sQ0FBQ0ssaUJBQWlCO0lBQzNELElBQUksQ0FBQ0UsbUJBQW1CO1FBQ3RCUixVQUFVQyxPQUFPLENBQUNLLGlCQUFpQixHQUFHO1FBRXRDLHNDQUFzQztRQUN0Q0csUUFBUVAsSUFBSSxDQUFDLGtCQUFrQlEsTUFBTSxDQUFDSjtJQUN4QztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvd2JpdGUtcmVhY3QvLi9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXNoYXJlZC9kaXN0L2VzbS93YXJuLmpzP2JkZDgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciB3YXJuQ2FjaGUgPSB7XG4gIGN1cnJlbnQ6IHt9XG59O1xuXG4vKipcbiAqIExvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgaXMgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50IG9ubHkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3YXJuKGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoIShwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoY29uZGl0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBzYW5pdGl6ZWRNZXNzYWdlID0gbWVzc2FnZS50cmltKCk7XG4gIHZhciBoYXNBbHJlYWR5UHJpbnRlZCA9IHdhcm5DYWNoZS5jdXJyZW50W3Nhbml0aXplZE1lc3NhZ2VdO1xuICBpZiAoIWhhc0FscmVhZHlQcmludGVkKSB7XG4gICAgd2FybkNhY2hlLmN1cnJlbnRbc2FuaXRpemVkTWVzc2FnZV0gPSB0cnVlO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLndhcm4oXCJbQXV0b2NvbXBsZXRlXSBcIi5jb25jYXQoc2FuaXRpemVkTWVzc2FnZSkpO1xuICB9XG59Il0sIm5hbWVzIjpbIndhcm5DYWNoZSIsImN1cnJlbnQiLCJ3YXJuIiwiY29uZGl0aW9uIiwibWVzc2FnZSIsInByb2Nlc3MiLCJzYW5pdGl6ZWRNZXNzYWdlIiwidHJpbSIsImhhc0FscmVhZHlQcmludGVkIiwiY29uc29sZSIsImNvbmNhdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@algolia/autocomplete-shared/dist/esm/warn.js\n");

/***/ })

};
;